
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>ConfigureCentos - OPeNDAP Documentation</title>
</head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-ConfigureCentos skin-monobook action-view">
<div id="globalWrapper">
<div id="column-content"><div id="content" class="mw-body-primary" role="main">
	
	
	<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">ConfigureCentos</span></h1>
	<div id="bodyContent" class="mw-body">
		<div id="siteSub">From OPeNDAP Documentation</div>
		<div id="contentSub"></div>
		

		<!-- start content -->
<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p><a href="../index.php/HowTo_guides" title="HowTo guides" class="mw-redirect">&lt;&lt; back to HowTo Guides</a>
</p><p>This describes how to set up a vanilla CentOS computer so that we can build RPM binaries for the Hyrax data server. This was taken from notes describing how I configured a machine with a fresh install of CentOS 5.3 to build Hyrax. Augmented for CentOS 6. 
</p><p>If you're installing this on a <i>virtual</i> host using VMware, see the section at the end of this document for some tips on making that VM run smoothly.
</p>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#CentOS_versions"><span class="tocnumber">1</span> <span class="toctext">CentOS versions</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Initial_configuration"><span class="tocnumber">2</span> <span class="toctext">Initial configuration</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="#Autotools"><span class="tocnumber">2.1</span> <span class="toctext">Autotools</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="#RPM_Construction_Tools"><span class="tocnumber">2.2</span> <span class="toctext">RPM Construction Tools</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="#Hyrax_specific_configuration"><span class="tocnumber">3</span> <span class="toctext">Hyrax specific configuration</span></a>
<ul>
<li class="toclevel-2 tocsection-6"><a href="#Add_the_EPEL_EL_repo_to_yum"><span class="tocnumber">3.1</span> <span class="toctext">Add the EPEL EL repo to yum</span></a>
<ul>
<li class="toclevel-3 tocsection-7"><a href="#Centos_5.x"><span class="tocnumber">3.1.1</span> <span class="toctext">Centos 5.x</span></a></li>
<li class="toclevel-3 tocsection-8"><a href="#Centos_6.x"><span class="tocnumber">3.1.2</span> <span class="toctext">Centos 6.x</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-9"><a href="#Data_type_dependencies:_NetCDF.2C_HDF4.2C_HDF5"><span class="tocnumber">3.2</span> <span class="toctext">Data type dependencies: NetCDF, HDF4, HDF5</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="#Other_dependencies"><span class="tocnumber">3.3</span> <span class="toctext">Other dependencies</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#..._If_you.27re_feeling_lucky"><span class="tocnumber">3.4</span> <span class="toctext">... If you're feeling lucky</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-12"><a href="#VMware_configuration_tips"><span class="tocnumber">4</span> <span class="toctext">VMware configuration tips</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#Support_for_DEB_packages"><span class="tocnumber">5</span> <span class="toctext">Support for DEB packages</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#problems_not_addressed"><span class="tocnumber">6</span> <span class="toctext">problems not addressed</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="CentOS_versions"><span class="mw-headline-number">1</span> CentOS versions</span></h2>
<p>These instructions have been amended to cover:
</p>
<ul>
<li> CentOS-6.3 (64bit)
</li>
</ul>
<h2><span class="mw-headline" id="Initial_configuration"><span class="mw-headline-number">2</span> Initial configuration</span></h2>
<p>Set up general build stuff that you need:
</p>
<ul>
<li> <i>yum install java-1.7.0-openjdk java-1.7.0-openjdk-devel</i>  <b>*</b>see note below about Java, Ant and CentOS 6
</li>
<li> <i>yum install ant</i> 
</li>
<li> <i>yum install git</i>
</li>
<li> <i>yum install gcc-c++</i>
</li>
<li> <i>yum install flex</i>
</li>
<li> <i>yum install bison</i>
</li>
<li> <i>yum install curl-devel</i>
</li>
<li> <i>yum install libxml2-devel</i>
</li>
<li> <i>yum install libjpeg-devel</i>
</li>
<li> <i>yum install zlib-devel</i> (this provides both 'compress' and 'gzip' support)
</li>
<li> <i>yum install bzip2-devel</i> (this provides 'bzip2' support)
</li>
<li> <i>yum install readline-devel</i>
</li>
<li> <i>yum install libuuid-devel</i>
</li>
<li> <i>yum install openssl-devel</i>
</li>
<li> Not having emacs is a problem for some... <i>yum install emacs</i>
</li>
</ul>
<p>If you're feeling lucky, you can put all of the packages on a single line
</p>
<dl>
<dd><i>yum install java-1.7.0-openjdk java-1.7.0-openjdk-devel ant git gcc-c++ flex bison openssl-devel libuuid-devel readline-devel zlib-devel bzip2-devel libicu-devel libjpeg-devel libxml2-devel curl-devel emacs</i>
</dd>
</dl>
<p><b>Notes:</b> 
</p>
<ul>
<li><i>Java 1.7, Ant and CentOS 6</i>. I found that ant 1.7 (the default with CentOS 6) would not work with Java 1.8. To get our code to build with Java 1.7, I used <i>alternatives --config java</i> to configure 1.7 and then <i>export JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75.x86_64</i>. I could not compile the olfs otherwise. 
</li>
<li><i>7 June 2016 - CentOS 7 RPM Build</i>. I had to add bzip2-devel and libicu-devel to the set of packages to get the RPM to build on CentOS 7. It may be the case this was true of CentOS 6 as well and it just slipped by.
</li>
</ul>
<h4><span class="mw-headline" id="Autotools"><span class="mw-headline-number">2.1</span> Autotools</span></h4>
<p>The autotools with CentOS 6 should be fine - the scripts will complain if otherwise. However, the newer autoconf/make support some nice features, so installing these newer version is not a waste. On a Test machine, this should not be done. If you don't install the new versions, make sure to use yum to install autoconf, automake and libtool. That is
</p>
<dl>
<dd><i>yum install autoconf automake libtool</i>
</dd>
</dl>
<p>If you don't want to use RPM for these, then:
</p>
<ul>
<li> download the latest versions of autoconf <a rel="nofollow" class="external text" href="http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz">autoconf-2.69.tar.gz</a>, automake <a rel="nofollow" class="external text" href="http://ftp.gnu.org/gnu/automake/automake-1.14.1.tar.gz">automake-1.14.1.tar.gz</a> and libtool <a rel="nofollow" class="external text" href="http://ftp.gnu.org/gnu/libtool/libtool-2.4.2.tar.gz">libtool-2.4.2.tar.gz</a>
</li>
<li> ./configure, make, make install
</li>
</ul>
<h4><span class="mw-headline" id="RPM_Construction_Tools"><span class="mw-headline-number">2.2</span> RPM Construction Tools</span></h4>
<ul>
<li> <i>yum install rpm-devel rpm-build redhat-rpm-config</i>
</li>
</ul>
<h2><span class="mw-headline" id="Hyrax_specific_configuration"><span class="mw-headline-number">3</span> Hyrax specific configuration</span></h2>
<p>Set up things that are specific to Hyrax
</p><p>It's best to use as much of the RPM 'ecosystem' as possible because this is what will be on other people's computers; using newer stuff, like the lastest HDF5 library is only going to cause incompatibilities. But to do that for Hyrax, you need to get beyond the stock set of repositories that <i>yum</i> searches. 
</p>
<h4><span class="mw-headline" id="Add_the_EPEL_EL_repo_to_yum"><span class="mw-headline-number">3.1</span> Add the EPEL EL repo to yum</span></h4>
<ul>
<li> Information about EPEL/EL is here: <a rel="nofollow" class="external free" href="https://fedoraproject.org/wiki/EPEL">https://fedoraproject.org/wiki/EPEL</a>.
</li>
<li> For CentOS 6, you likely want the rpm package here: <a rel="nofollow" class="external free" href="http://mirror.pnl.gov/epel/6/i386/repoview/epel-release.html">http://mirror.pnl.gov/epel/6/i386/repoview/epel-release.html</a>
</li>
</ul>
<blockquote><b>Note</b> Use CentOS 6 if possible for Hyrax at this time (Sept 2014). We'll be moving to combined v.6 and v.7 support soon; v.5 is no longer supported. Some CentOS 5 information is included here because this was initially written back when it was the latest version.</blockquote>
<h5><span class="mw-headline" id="Centos_5.x"><span class="mw-headline-number">3.1.1</span> Centos 5.x</span></h5>
<p>But don't use this unless you really have too...
</p>
<ul>
<li> google EPEL/EL5 and 
</li>
<li> find &amp; download <i>epel-release-5.4.noarch.rpm</i>
</li>
<li> install it: <i>rpm -i epel-release-5.4.noarch.rpm</i>
</li>
</ul>
<h5><span class="mw-headline" id="Centos_6.x"><span class="mw-headline-number">3.1.2</span> Centos 6.x</span></h5>
<p>Use this until we start supporting CentOS 7
</p>
<ul>
<li> google EPEL/EL6 and 
</li>
<li> find &amp; download <i>epel-release-6.5.noarch.rpm</i>
</li>
<li> install it: <i>rpm -i epel-release-6.5.noarch.rpm</i>
</li>
</ul>
<h4><span class="mw-headline" id="Data_type_dependencies:_NetCDF.2C_HDF4.2C_HDF5"><span class="mw-headline-number">3.2</span> Data type dependencies: NetCDF, HDF4, HDF5</span></h4>
<ul>
<li> <i>yum install netcdf-devel</i> (note: On CentOS-6.2 you'll get netcdf-4 and on CentOS-5.3 you'll get netcdf-3)
</li>
<li> <i>yum install hdf-devel</i> (note: 'hdf', not 'hdf4')
</li>
<li> <i>yum install hdf5-devel</i>
</li>
</ul>
<h4><span class="mw-headline" id="Other_dependencies"><span class="mw-headline-number">3.3</span> Other dependencies</span></h4>
<ul>
<li> <i>yum install libicu-devel</i>
</li>
<li> <i>yum install cfitsio-devel</i>
</li>
<li> <i>yum install cppunit-devel</i>
</li>
</ul>
<h4><span class="mw-headline" id="..._If_you.27re_feeling_lucky"><span class="mw-headline-number">3.4</span> ... If you're feeling lucky</span></h4>
<p>As with the 'build packages,' here are all of the 'hyrax-specific' packages so you can use just one Yum command
</p>
<dl>
<dd><i>netcdf-devel hdf-devel hdf5-devel libicu-devel cfitsio-devel cppunit-devel rpm-devel rpm-build</i>.
</dd>
</dl>
<p>Note that you'll still need to set up the EPEL repository.
</p>
<h2><span class="mw-headline" id="VMware_configuration_tips"><span class="mw-headline-number">4</span> VMware configuration tips</span></h2>
<p>It's best if you enable a shared directory so that you can pass stuff back and forth between the host OS and the Guest OS (i.e., the Virtual machine). That will only work if you have the <i>VMware tools</i> installed in/on the guest.
</p>
<ul>
<li> Install VMware-tools. This process varies, but it's pretty easy for all platforms. On VMware Fusion, look under the <i>Virtual Machine</i> menu for the item that says <i>Install VMware Tools</i>. This will download lump of code and, for CentOS, mount it on '/media/VMware Tools' (yes, there's a space in the directory name). Copy the *.tar.gz file to some place like your home directory, unpack it and read the INSTALL file. For an initial installation, the typical process is to run <i>vmware-install.pl</i>.
</li>
<li> Under the configuration/options menu (the little wrench thing in Fusion), choose <i>Sharing</i>. Make a folder with an obvious name (e.g., <i>vmware</i>) and turn sharing on. Now, anything you put in there when on either the OS will be available to the other OS. On linux, this directory is located at <i>/mnt/hgfs/&lt;&lt;name&gt;&gt;</i>.
</li>
</ul>
<h2><span class="mw-headline" id="Support_for_DEB_packages"><span class="mw-headline-number">5</span> Support for DEB packages</span></h2>
<p>It is possible to use <i>fpm</i> to build debian packages from RPM packages. See <a rel="nofollow" class="external text" href="https://ask.fedoraproject.org/en/question/52141/how-to-convert-rpm-package-to-deb/">how-to-convert-rpm-package-to-deb</a> for an explanation. In summary, make a few directories to hold parts of the RPM, load files from the RPM into them and then use <i>fpm</i> to build the debian package. In addition to these steps, extract the package description text to a file and pass that into <i>fpm</i> and look at the dependencies for the RPMs, find the corresponding Ubuntu dependencies and provide them to <i>fpm</i>.
</p>
<h2><span class="mw-headline" id="problems_not_addressed"><span class="mw-headline-number">6</span> problems not addressed</span></h2>
<ul>
<li> There is no JUnit for the OLFS build
</li>
<li> There is no graphviz so the <i>doc</i> targets for libdap and bes will fail
</li>
</ul>




</div>
				<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
</body></html>