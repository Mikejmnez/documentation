
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>BES - Modules - CSV Handler - OPeNDAP Documentation</title>
</head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-BES_-_Modules_-_CSV_Handler skin-monobook action-view">
<div id="globalWrapper">
<div id="column-content"><div id="content" class="mw-body-primary" role="main">
	
	
	<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">BES - Modules - CSV Handler</span></h1>
	<div id="bodyContent" class="mw-body">
		<div id="siteSub">From OPeNDAP Documentation</div>
		<div id="contentSub"></div>
		

		<!-- start content -->
<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Kinds_of_files_the_handler_will_serve"><span class="tocnumber">1</span> <span class="toctext">Kinds of files the handler will serve</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Data_file_configuration"><span class="tocnumber">1.1</span> <span class="toctext">Data file configuration</span></a>
<ul>
<li class="toclevel-3 tocsection-3"><a href="#Supported_OpenDAP_datatypes"><span class="tocnumber">1.1.1</span> <span class="toctext">Supported OpenDAP datatypes</span></a></li>
<li class="toclevel-3 tocsection-4"><a href="#Dataset_representation"><span class="tocnumber">1.1.2</span> <span class="toctext">Dataset representation</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-5"><a href="#Known_problems"><span class="tocnumber">1.2</span> <span class="toctext">Known problems</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-6"><a href="#Configuration_parameters"><span class="tocnumber">2</span> <span class="toctext">Configuration parameters</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="#Configuring_the_handler"><span class="tocnumber">2.1</span> <span class="toctext">Configuring the handler</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Configuring_Datasets"><span class="tocnumber">2.2</span> <span class="toctext">Configuring Datasets</span></a>
<ul>
<li class="toclevel-3 tocsection-9"><a href="#Simple_attribute_definitions"><span class="tocnumber">2.2.1</span> <span class="toctext">Simple attribute definitions</span></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Kinds_of_files_the_handler_will_serve"><span class="mw-headline-number">1</span> Kinds of files the handler will serve</span></h2>
<p>This handler will serve Comma-Separated Values type data. Form many kinds of files, only very modifications to the data files are needed. If you have very complex ASCII data (e.g., data with headers), take a look at the FreeForm handler, too.
</p>
<h3><span class="mw-headline" id="Data_file_configuration"><span class="mw-headline-number">1.1</span> Data file configuration</span></h3>
<p>Given a simple CSV data file, such as would be written out by Excel, add a single line at the start that provides a name and OpenDAP datatype for each column. Just as the data values in a given row are separated by a comma, so are the column names and types. Here is a small example data file with the added <i>name&lt;type&gt;</i> configuration row.
</p>
<dl>
<dd>"Station&lt;String&gt;","latitude&lt;Float32&gt;","longitude&lt;Float32&gt;","temperature_K&lt;Float32&gt;","Notes&lt;String&gt;"
</dd>
<dd>"CMWM",-34.7,23.7,264.3,
</dd>
<dd>"BWWJ",-34.2,21.5,262.1,"Foo"
</dd>
<dd>"CWQK",-32.7,22.3,268.4,
</dd>
<dd>"CRLM",-33.8,22.1,270.2,"Blah"
</dd>
<dd>"FOOB",-32.9,23.4,269.69,"FOOBAR"
</dd>
</dl>
<h5><span class="mw-headline" id="Supported_OpenDAP_datatypes"><span class="mw-headline-number">1.1.1</span> Supported OpenDAP datatypes</span></h5>
<p>The CSV handler supports the following DAP2 simple types: Int16, Int32, Float32, Float64, String.
</p>
<h5><span class="mw-headline" id="Dataset_representation"><span class="mw-headline-number">1.1.2</span> Dataset representation</span></h5>
<p>The CSV handler will return represent the columns in the dataset as arrays with the named dimension <i>record</i>. For example, the sample data shown above will be represented in DAP2 by this handler as:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="c source-c"><pre class="de1">Dataset <span class="br0">&#123;</span>
    String Station<span class="br0">&#91;</span>record <span class="sy0">=</span> <span class="nu0">5</span><span class="br0">&#93;</span><span class="sy0">;</span>
    Float32 latitude<span class="br0">&#91;</span>record <span class="sy0">=</span> <span class="nu0">5</span><span class="br0">&#93;</span><span class="sy0">;</span>
    Float32 longitude<span class="br0">&#91;</span>record <span class="sy0">=</span> <span class="nu0">5</span><span class="br0">&#93;</span><span class="sy0">;</span>
    Float32 temperature_K<span class="br0">&#91;</span>record <span class="sy0">=</span> <span class="nu0">5</span><span class="br0">&#93;</span><span class="sy0">;</span>
    String Notes<span class="br0">&#91;</span>record <span class="sy0">=</span> <span class="nu0">5</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="br0">&#125;</span> temperature.<span class="me1">csv</span><span class="sy0">;</span></pre></div></div>
<p>This is in contrast to the FreeForm handler that would represent these data as a Sequence with five columns.
</p><p>For each column, the corresponding Array in the OpenDAP dataset has one attribute named <i>type</i> with a string value of <i>Int16</i>, ..., <i>String</i>. However, see below for information on how to add custom attributes to a dataset.
</p>
<h3><span class="mw-headline" id="Known_problems"><span class="mw-headline-number">1.2</span> Known problems</span></h3>
<p>There are no known problems.
</p>
<h2><span class="mw-headline" id="Configuration_parameters"><span class="mw-headline-number">2</span> Configuration parameters</span></h2>
<h3><span class="mw-headline" id="Configuring_the_handler"><span class="mw-headline-number">2.1</span> Configuring the handler</span></h3>
<p>This handler has no specific configuration parameters.
</p>
<h3><span class="mw-headline" id="Configuring_Datasets"><span class="mw-headline-number">2.2</span> Configuring Datasets</span></h3>
<p>There are two ways to add custom attributes to a dataset. First, you can use an <i>ancillary attribute</i> file in the same directory as the dataset. Alternatively, you can use NcML to add new attributes, variables, etc. See <a href="../index.php/BES_-_Modules_-_NcML_Module" title="BES - Modules - NcML Module"> the NcML Handler documentation</a> for more information on that option. Here we will describe how to set up an ancillary attribute file.
</p>
<h5><span class="mw-headline" id="Simple_attribute_definitions"><span class="mw-headline-number">2.2.1</span> Simple attribute definitions</span></h5>
<p>For any OpenDAP dataset, it is possible to write an ancillary attributes file like the following. If that file has the name <i>dataset</i>.<tt>das</tt> then whenever Hyrax reads <i>dataset</i>, it will also read those attributes, and return them when asked. 
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="c source-c"><pre class="de1">Attributes <span class="br0">&#123;</span>
   Station <span class="br0">&#123;</span>
      String bouy_type <span class="st0">&quot;flashing&quot;</span><span class="sy0">;</span>
      Byte Age <span class="nu0">53</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
   Global <span class="br0">&#123;</span>
       String DateCompiled <span class="st0">&quot;11/17/98&quot;</span><span class="sy0">;</span>
       String Conventions <span class="st0">&quot;CF-1.0&quot;</span><span class="sy0">,</span> <span class="st0">&quot;CF-1.6&quot;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>The format of this file is very simple: Each variable in the dataset may have a collection of attributes, each of which consists of a type, a name and one or more values. In the above example, the variable <i>Station</i> will have the additional attributes <i>bouy_type</i> and <i>Age</i> with the respective types and values. Note that datasets may also define global attributes - information about the dataset as a whole - by adding a section with a name that doesn't match the name of any variable in the dataset. In this example, I used <i>Global</i> for this (because it's obvious) but I could have used <i>foo</i>. Also note the attribute <i>Conventions</i> has two values, <i>CF-1.0</i> and 'CF-1.6<i>.</i>
</p>

</div>
				<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
</body></html>