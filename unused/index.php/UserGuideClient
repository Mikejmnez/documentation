
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>UserGuideClient - OPeNDAP Documentation</title>
</head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-UserGuideClient skin-monobook action-view">
<div id="globalWrapper">
<div id="column-content"><div id="content" class="mw-body-primary" role="main">
	
	
	<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">UserGuideClient</span></h1>
	<div id="bodyContent" class="mw-body">
		<div id="siteSub">From OPeNDAP Documentation</div>
		<div id="contentSub"></div>
		

		<!-- start content -->
<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p><a href="../index.php/UserGuide" title="UserGuide">return to User Guide</a>
</p>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#The_OPeNDAP_Client"><span class="tocnumber">1</span> <span class="toctext">The OPeNDAP Client</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Clients"><span class="tocnumber">1.1</span> <span class="toctext">Clients</span></a>
<ul>
<li class="toclevel-3 tocsection-3"><a href="#Matlab.2C_IDL.2C_Ferret.2C_GrADS"><span class="tocnumber">1.1.1</span> <span class="toctext">Matlab, IDL, Ferret, GrADS</span></a></li>
<li class="toclevel-3 tocsection-4"><a href="#Testing"><span class="tocnumber">1.1.2</span> <span class="toctext">Testing</span></a></li>
<li class="toclevel-3 tocsection-5"><a href="#Client_Libraries"><span class="tocnumber">1.1.3</span> <span class="toctext">Client Libraries</span></a>
<ul>
<li class="toclevel-4 tocsection-6"><a href="#C.2B.2B_Client_Library"><span class="tocnumber">1.1.3.1</span> <span class="toctext">C++ Client Library</span></a></li>
<li class="toclevel-4 tocsection-7"><a href="#C_Client_Library"><span class="tocnumber">1.1.3.2</span> <span class="toctext">C Client Library</span></a></li>
<li class="toclevel-4 tocsection-8"><a href="#Java_Client_Library"><span class="tocnumber">1.1.3.3</span> <span class="toctext">Java Client Library</span></a></li>
<li class="toclevel-4 tocsection-9"><a href="#netCDF_API_Library"><span class="tocnumber">1.1.3.4</span> <span class="toctext">netCDF API Library</span></a></li>
<li class="toclevel-4 tocsection-10"><a href="#Python_library"><span class="tocnumber">1.1.3.5</span> <span class="toctext">Python library</span></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

<h1><span class="mw-headline" id="The_OPeNDAP_Client"><span class="mw-headline-number">1</span> The OPeNDAP Client</span></h1>
<p>The OPeNDAP client is the program that sends a message to an OPeNDAP
server in order to get some data, or other information.  
</p><p>An OPeNDAP client is usually just a data analysis application program
modified to become a web browser, somewhat like any other web browser
with which you may be familiar. A web browser can only display the
data it receives, however. What makes an OPeNDAP client different from
another web browser is that once the data has been received from an
OPeNDAP server, the OPeNDAP client application can compute with it.
</p><p>Like a web browser, an OPeNDAP client accepts a URL from a user, and
sends a message to that address, asking for the information specified
in the the URL. Unlike a typical web browser, an OPeNDAP client will
not know what to do with data returned for a web page containing text
and pictures, but an OPeNDAP server will return scientific data that
an OPeNDAP client can understand and process.
</p><p>There is a wide range of OPeNDAP clients available, and it should not
be hard to find one you can use.
</p><p>In fact, though it can become clumsy for advanced applications, you
can use an ordinary web browser as a client to most OPeNDAP servers,
making use of the server's
<a href="../index.php/UserGuideOPeNDAPMessages#WWW_Interface_Service" title="UserGuideOPeNDAPMessages">WWW interface</a>.  The
<a href="../index.php/QuickStart" title="QuickStart">Quick Start Guide</a> contains many examples of exactly
this.
</p><p>After a basic web browser, the simplest clients to use are likely to
be the programs you're already using.  If you use one of the popular
data analysis environments like Matlab or IDL, you can find a client
command you can incorporate into your environment to let you call
OPeNDAP data directly into your working data.  If you use one of the
netCDF-based packages, like GrADS or Ferret, you can get a
network-enabled version of the program that will work with OPeNDAP
URLs just as well as file names.
</p><p>If none of those options work for you, there is a whole range of
client libraries you can use to develop a client of your own.  Several
of these are supported by the OPeNDAP project, and there are others
out there in the world supported by other groups.
</p><p>This page provides a list and very brief overview of the various
options, along with pointers to places you can find more information
about each one.
</p>
<h2><span class="mw-headline" id="Clients"><span class="mw-headline-number">1.1</span> Clients</span></h2>
<p>OPeNDAP clients come in a variety of forms.  The simplest are web
browsers, who use the OPeNDAP
<a href="../index.php/UserGuideOPeNDAPMessages#WWW_Interface_Service" title="UserGuideOPeNDAPMessages">WWW interface</a> and
the [[<a href="../index.php/UserGuideOPeNDAPMessages#ASCII_Service" title="UserGuideOPeNDAPMessages">ASCII response</a> to
check out data sets and download data.
</p><p>Beyond these, there are three categories of client.  The first contains
clients you can use in conjunction with one of the popular data
analysis environments, the second is a collection of command-line
clients useful for scripting as well as testing, and the third
contains a set of API libraries you can use for developing your own
client, or for converting an existing body of code into an OPeNDAP
client.  These are reviewed in that order below:
</p><p><br />
</p>
<h3><span class="mw-headline" id="Matlab.2C_IDL.2C_Ferret.2C_GrADS"><span class="mw-headline-number">1.1.1</span> Matlab, IDL, Ferret, GrADS</span></h3>
<p>To use OPeNDAP with Matlab or IDL, you'll need the client for each.
This is a special program that issues a request for data from an
OPeNDAP server, and imports it into the environment.  Links to 
<a rel="nofollow" class="external text" href="http://opendap.org/download/ml-structs.html">the Matlab client</a> and
<a rel="nofollow" class="external text" href="http://opendap.org/download/idl-client.html">the IDL client</a> can be
found on the [http;//opendap.org/download/index.html OPeNDAP software
download page].
</p><p>Using OPeNDAP data with the 
<a rel="nofollow" class="external text" href="http://www.iges.org/grads">GrADS</a> or
<a rel="nofollow" class="external text" href="http://ferret.wrc.noaa.gov/Ferret">Ferret</a> packages is even easier.
Because these packages are based on the netCDF library, and because
that library now supports reading OPeNDAP data sets, these packages
can read OPeNDAP URLs as easily as they read local files.
</p><p>Special note.  If you're using the Matlab client, and using it for
oceanographic data, you may be interested in the graphical user
interface available for it.  See [<a rel="nofollow" class="external free" href="http://oceanographicdata.org/toolbox">http://oceanographicdata.org/toolbox</a>
Matlab OPeNDAP Ocean Toolbox].
</p>
<h3><span class="mw-headline" id="Testing"><span class="mw-headline-number">1.1.2</span> Testing</span></h3>
<p>There are a couple of command-line clients out there you can use,
though most people only use them for testing.  Part of the libdap
distribution (the C++ interface) is a program called getdap, which
takes an OPeNDAP URL as a command-line argument and returns the reply
to standard output.  This is typically used to check that the libdap
C++ library is properly compiled, but you can also use it to retrieve
data. 
</p><p>Part of the OPeNDAP C library is a command-line client called octest.
This allows you to type commands to manipulate responses to an OPeNDAP
URL.  Like the C++ test program, this can be construed as a test of
the library or a test of the servers, but it can also be used as a
command-line client, perhaps as an aid to automation.
</p><p>Similar programs are part of the netCDF distribution.  The ncdump
program outputs a "dump" of a netCDF file, and ncview provides a
better-formatted look at such a file.  Since the standard netCDF
library can be linked to the OPeNDAP libraries, both these programs
can be readily aquired in their OPeNDAP-enabled form.
</p><p>Here is a simple example, using the ncview program. This program
simply prints out the contents of a netCDF formatted data file,
specified on the command line, like this:  
</p>
<pre>
&gt; ncdump fnocl.nc
</pre>
<p>Using OPeNDAP, this same function may be executed from any computer
connected to the Internet by substituting a URL for the filename
above: 
</p>
<pre>
&gt; ncdump http://dods.gso.uri.edu/cgi-bin/nc/data/fnocl.nc
</pre>
<p><br />
Aside from the fact that the data is remote, and must be specified
with a URL, the program will seem to function in the same way it had
with the simple netCDF library (albeit somewhat more slowly due to
having to make network connections instead of local file
operations).
</p>
<pre>
netcdf fnocl {
dimensions:
    time_a = 16
    lat = 17&#160;;
    lon = 21&#160;;
    time = 16&#160;;

variables:
    long u(time_a, lat, ion)&#160;; 
        u:units = ``meter per second''&#160;; 
        u:long_name = ``Vector wind eastward component''&#160;; 
        u:missing_value = ``-32767''&#160;; 
        u:scale_factor = ``0.005''&#160;; 
    long v(time_a, lat, ion)&#160;; 
        v:units = ``meter per second''&#160;;
        v:long_name = ``Vector wind northward component''&#160;;
        v:missing_value = ``-32767''&#160;;
        v:scale_factor = ``0.005''&#160;; 
    double lat(lat)&#160;;
        lat:units = ``degree North''&#160;;
    double lon(lon)&#160;;
        lon:units = ``degree East''&#160;; 
    double time(time)&#160;;
        time:units = ``hours from base_time''&#160;;

// global attributes: 
       &#160;:base_time = ``88- 10-00:00:00''&#160;; 
       &#160;:title = ``FNOC UV wind components 
                           from 1988- 10 to 1988- 13.''&#160;;
data:
 u =
  -1728, -2449, -3099, -3585, -3254, -2406, -1252,
    662, 2483, 2910, 2819, 2946, 2745, 2734,
  2931, 2601, 2139, 1845, 1754, 1897, 1854, -1686,
...
</pre>
<p><br />
</p>
<h3><span class="mw-headline" id="Client_Libraries"><span class="mw-headline-number">1.1.3</span> Client Libraries</span></h3>
<p>Several libraries exist that you can link with other software to
create an OPeNDAP client.  Some of these are provided by the OPeNDAP
project itself, and some are projects of other groups.
</p><p>The OPeNDAP libraries are functional equivalents of each other.  They
are derived from separate code bases, but they do the same thing.
They are provided in different languages for the convenience of the
implementer. 
</p><p><br />
</p>
<h4><span class="mw-headline" id="C.2B.2B_Client_Library"><span class="mw-headline-number">1.1.3.1</span> C++ Client Library</span></h4>
<p>The <a rel="nofollow" class="external text" href="http://opendap.org/download/libdap++.html">C++ library</a>, also
called libdap, was the original client implementation of the OPeNDAP
protocol.  It provides classes to manage the connection between a
client and a data source, as well as classes for each of the data
types, and the other information (such as DAS and DDS) a client will
encounter. 
</p><p>To use the library, you will need to provide implementations for some abstract classes.
Consult the <a href="../index.php/Libdap_Overview" title="Libdap Overview">libdap Overview</a> for an introduction to the basic
concepts behind the use of this library.  You will also find the 
<a rel="nofollow" class="external text" href="http://www.opendap.org/api/pref/html/index.html">C++ library Reference</a> useful.
</p>
<h4><span class="mw-headline" id="C_Client_Library"><span class="mw-headline-number">1.1.3.2</span> C Client Library</span></h4>
<p>The OPeNDAP group supports a <a rel="nofollow" class="external text" href="http://opendap.org/download/oc.html">C library</a>.  The C library is in many ways a simpler library to use than the C++ libdap, but it is not as flexible in other ways.  Using the library is straightforward, and you'll find a file called octutorial.html in the software release that provides a detailed example of its use.
</p>
<h4><span class="mw-headline" id="Java_Client_Library"><span class="mw-headline-number">1.1.3.3</span> Java Client Library</span></h4>
<p>The OPeNDAP group supports a <a rel="nofollow" class="external text" href="http://opendap.org/download/java-dap.html">Java implementation</a> of the DAP.  On the Java page, there are links to download the Java class documentation.
</p>
<h4><span class="mw-headline" id="netCDF_API_Library"><span class="mw-headline-number">1.1.3.4</span> netCDF API Library</span></h4>
<p>The <a rel="nofollow" class="external text" href="http://www.unidata.ucar.edu/software/netcdf">netCDF library</a>
deserves special note.  This is a drop-in replacement for the standard
netCDF library.  (In fact, as of release 4.0, it <i>is</i> the standard
netCDF library.)  This means that converting a program that depends on
the netCDF API to use OPeNDAP is as simple as re-linking with an
updated version of the netCDF library.
</p><p>See the <a rel="nofollow" class="external text" href="http://www.unidata.ucar.edu/software/netcdf">netCDF home page</a>
for information about how to use that library.
</p><p><br />
</p>
<h4><span class="mw-headline" id="Python_library"><span class="mw-headline-number">1.1.3.5</span> Python library</span></h4>
<p><a rel="nofollow" class="external text" href="http://pydap.org">Pydap</a> is an implementation of the OPeNDAP client in
pure Python.  This is tremendously useful for scripting complicated
applications with lots of download steps.  This is not supported by
the OPeNDAP group, so please refer to the <a rel="nofollow" class="external text" href="http://pydap.org">Pydap site</a> for more information about it.
</p>



</div>
				<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
</body></html>