
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>BES - Debugging Using besstandalone - OPeNDAP Documentation</title>
</head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-BES_-_Debugging_Using_besstandalone skin-monobook action-view">
<div id="globalWrapper">
<div id="column-content"><div id="content" class="mw-body-primary" role="main">
	
	
	<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">BES - Debugging Using besstandalone</span></h1>
	<div id="bodyContent" class="mw-body">
		<div id="siteSub">From OPeNDAP Documentation</div>
		<div id="contentSub"></div>
		

		<!-- start content -->
<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p>When you need to debug a handler, there are several ways to go about it. First, you can use a run-time debugger like the one included with Eclipse (really GNU's <i>gdb</i>), fall back on the tried and true 'print statements' or some other combination of program instrumentation and run-time diagnosis. In all cases, being able to run your handler <i>as part of a command line program</i> and not a server, will speed up and simplify the process.
</p><p>We have designed a run-time debugging tool for just this purpose.
</p>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Review:_Debugging_using_a_client_and_the_server"><span class="tocnumber">1</span> <span class="toctext">Review: Debugging using a client and the server</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#What_you_would_like"><span class="tocnumber">2</span> <span class="toctext">What you would like</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Examples"><span class="tocnumber">3</span> <span class="toctext">Examples</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Some_Tricks"><span class="tocnumber">4</span> <span class="toctext">Some Tricks</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="#Using_besstandalone_and_the_BESDEBUG_instrumentation_macro"><span class="tocnumber">4.1</span> <span class="toctext">Using besstandalone and the BESDEBUG instrumentation macro</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="#Filtering_binary_output_using_getdap"><span class="tocnumber">4.2</span> <span class="toctext">Filtering binary output using getdap</span></a></li>
</ul>
</li>
</ul>
</div>

<h1><span class="mw-headline" id="Review:_Debugging_using_a_client_and_the_server"><span class="mw-headline-number">1</span> Review: Debugging using a client and the server</span></h1>
<p>To test (and/or debug) your handler using the BES (server), you first build and install your new handler version. Then you modify the <i>bes.conf</i> file so that the handler will be loaded at run-time and start the server. Next you start up the <i>bescmdln</i> client and point it at the server using the hostname (likely <i>localhost</i>) and port number (again, likely the default of <i>10022</i>). You can issue commands directly to <i>bescmdln</i> or pass it the name of a file of commands to run in sequence. Either way bescmdln prints whatever it get back from the BES to standard output. 
</p>
<h1><span class="mw-headline" id="What_you_would_like"><span class="mw-headline-number">2</span> What you would like</span></h1>
<p>It would be far easier to be be able to run you handler as if it <i>was</i> the command line client and see the output directly. This is exactly what the command <i>besstandalone</i> does for you. Like the <i>besctl start</i> command, <i>besstandalone</i> reads an optional <i>bes.config</i> file and takes optional debugging switches. Unlike <i>besctl</i> it does not start a server but, after performing the server initialization routines, it switches to 'client mode' and reads commands, printing the response from the BES <i>plus</i> any debugging output that was generated.
</p><p>The command files used by <i>bescmdln</i> and <i>besstandalone</i> are identical, so files developed for one can be used with the other.
</p>
<h1><span class="mw-headline" id="Examples"><span class="mw-headline-number">3</span> Examples</span></h1>
<p>A sample command file that asks the BES for a DDS response (from $prefix/src/modules/hdf4_handler/bes-testsuite):
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="xml source-xml"><pre class="de1"><span class="sc3"><span class="re1">&lt;?xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;UTF-8&quot;</span><span class="re2">?&gt;</span></span>
<span class="sc3"><span class="re1">&lt;request</span> <span class="re0">reqID</span>=<span class="st0">&quot;some_unique_value&quot;</span> <span class="re2">&gt;</span></span>
    <span class="sc3"><span class="re1">&lt;setContext</span> <span class="re0">name</span>=<span class="st0">&quot;dap_format&quot;</span><span class="re2">&gt;</span></span>dap2<span class="sc3"><span class="re1">&lt;/setContext<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;setContainer</span> <span class="re0">name</span>=<span class="st0">&quot;data&quot;</span> <span class="re0">space</span>=<span class="st0">&quot;catalog&quot;</span><span class="re2">&gt;</span></span>/data/1990-S1700101.HDF.gz<span class="sc3"><span class="re1">&lt;/setContainer<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;define</span> <span class="re0">name</span>=<span class="st0">&quot;d&quot;</span><span class="re2">&gt;</span></span>
	<span class="sc3"><span class="re1">&lt;container</span> <span class="re0">name</span>=<span class="st0">&quot;data&quot;</span> <span class="re2">/&gt;</span></span>
    <span class="sc3"><span class="re1">&lt;/define<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;get</span> <span class="re0">type</span>=<span class="st0">&quot;dds&quot;</span> <span class="re0">definition</span>=<span class="st0">&quot;d&quot;</span> <span class="re2">/&gt;</span></span>
<span class="sc3"><span class="re1">&lt;/request<span class="re2">&gt;</span></span></span></pre></div></div>
<p>Here's how to run these commands using the server and <i>bescmdln</i>:
</p>
<div style="border: solid red 1px; padding: .5em;"><p>Invalid language.</p><p>You need to specify a language like this: <samp>&lt;source lang=&quot;html4strict&quot;&gt;...&lt;/source&gt;</samp></p><p>Supported languages for syntax highlighting:</p><p class="mw-collapsible mw-collapsed" style="padding: 0em 1em;"><samp>4cs</samp>, <samp>6502acme</samp>, <samp>6502kickass</samp>, <samp>6502tasm</samp>, <samp>68000devpac</samp>, <samp>abap</samp>, <samp>actionscript</samp>, <samp>actionscript3</samp>, <samp>ada</samp>, <samp>algol68</samp>, <samp>apache</samp>, <samp>applescript</samp>, <samp>apt_sources</samp>, <samp>arm</samp>, <samp>asm</samp>, <samp>asp</samp>, <samp>asymptote</samp>, <samp>autoconf</samp>, <samp>autohotkey</samp>, <samp>autoit</samp>, <samp>avisynth</samp>, <samp>awk</samp>, <samp>bascomavr</samp>, <samp>bash</samp>, <samp>basic4gl</samp>, <samp>bf</samp>, <samp>bibtex</samp>, <samp>blitzbasic</samp>, <samp>bnf</samp>, <samp>boo</samp>, <samp>c</samp>, <samp>c_loadrunner</samp>, <samp>c_mac</samp>, <samp>caddcl</samp>, <samp>cadlisp</samp>, <samp>cfdg</samp>, <samp>cfm</samp>, <samp>chaiscript</samp>, <samp>cil</samp>, <samp>clojure</samp>, <samp>cmake</samp>, <samp>cobol</samp>, <samp>coffeescript</samp>, <samp>cpp</samp>, <samp>cpp-qt</samp>, <samp>csharp</samp>, <samp>css</samp>, <samp>cuesheet</samp>, <samp>d</samp>, <samp>dcl</samp>, <samp>dcpu16</samp>, <samp>dcs</samp>, <samp>delphi</samp>, <samp>diff</samp>, <samp>div</samp>, <samp>dos</samp>, <samp>dot</samp>, <samp>e</samp>, <samp>ecmascript</samp>, <samp>eiffel</samp>, <samp>email</samp>, <samp>epc</samp>, <samp>erlang</samp>, <samp>euphoria</samp>, <samp>f1</samp>, <samp>falcon</samp>, <samp>fo</samp>, <samp>fortran</samp>, <samp>freebasic</samp>, <samp>freeswitch</samp>, <samp>fsharp</samp>, <samp>gambas</samp>, <samp>gdb</samp>, <samp>genero</samp>, <samp>genie</samp>, <samp>gettext</samp>, <samp>glsl</samp>, <samp>gml</samp>, <samp>gnuplot</samp>, <samp>go</samp>, <samp>groovy</samp>, <samp>gwbasic</samp>, <samp>haskell</samp>, <samp>haxe</samp>, <samp>hicest</samp>, <samp>hq9plus</samp>, <samp>html4strict</samp>, <samp>html5</samp>, <samp>icon</samp>, <samp>idl</samp>, <samp>ini</samp>, <samp>inno</samp>, <samp>intercal</samp>, <samp>io</samp>, <samp>j</samp>, <samp>java</samp>, <samp>java5</samp>, <samp>javascript</samp>, <samp>jquery</samp>, <samp>kixtart</samp>, <samp>klonec</samp>, <samp>klonecpp</samp>, <samp>latex</samp>, <samp>lb</samp>, <samp>ldif</samp>, <samp>lisp</samp>, <samp>llvm</samp>, <samp>locobasic</samp>, <samp>logtalk</samp>, <samp>lolcode</samp>, <samp>lotusformulas</samp>, <samp>lotusscript</samp>, <samp>lscript</samp>, <samp>lsl2</samp>, <samp>lua</samp>, <samp>m68k</samp>, <samp>magiksf</samp>, <samp>make</samp>, <samp>mapbasic</samp>, <samp>matlab</samp>, <samp>mirc</samp>, <samp>mmix</samp>, <samp>modula2</samp>, <samp>modula3</samp>, <samp>mpasm</samp>, <samp>mxml</samp>, <samp>mysql</samp>, <samp>nagios</samp>, <samp>netrexx</samp>, <samp>newlisp</samp>, <samp>nsis</samp>, <samp>oberon2</samp>, <samp>objc</samp>, <samp>objeck</samp>, <samp>ocaml</samp>, <samp>ocaml-brief</samp>, <samp>octave</samp>, <samp>oobas</samp>, <samp>oorexx</samp>, <samp>oracle11</samp>, <samp>oracle8</samp>, <samp>oxygene</samp>, <samp>oz</samp>, <samp>parasail</samp>, <samp>parigp</samp>, <samp>pascal</samp>, <samp>pcre</samp>, <samp>per</samp>, <samp>perl</samp>, <samp>perl6</samp>, <samp>pf</samp>, <samp>php</samp>, <samp>php-brief</samp>, <samp>pic16</samp>, <samp>pike</samp>, <samp>pixelbender</samp>, <samp>pli</samp>, <samp>plsql</samp>, <samp>postgresql</samp>, <samp>povray</samp>, <samp>powerbuilder</samp>, <samp>powershell</samp>, <samp>proftpd</samp>, <samp>progress</samp>, <samp>prolog</samp>, <samp>properties</samp>, <samp>providex</samp>, <samp>purebasic</samp>, <samp>pycon</samp>, <samp>pys60</samp>, <samp>python</samp>, <samp>q</samp>, <samp>qbasic</samp>, <samp>rails</samp>, <samp>rebol</samp>, <samp>reg</samp>, <samp>rexx</samp>, <samp>robots</samp>, <samp>rpmspec</samp>, <samp>rsplus</samp>, <samp>ruby</samp>, <samp>sas</samp>, <samp>scala</samp>, <samp>scheme</samp>, <samp>scilab</samp>, <samp>sdlbasic</samp>, <samp>smalltalk</samp>, <samp>smarty</samp>, <samp>spark</samp>, <samp>sparql</samp>, <samp>sql</samp>, <samp>stonescript</samp>, <samp>systemverilog</samp>, <samp>tcl</samp>, <samp>teraterm</samp>, <samp>text</samp>, <samp>thinbasic</samp>, <samp>tsql</samp>, <samp>typoscript</samp>, <samp>unicon</samp>, <samp>upc</samp>, <samp>urbi</samp>, <samp>uscript</samp>, <samp>vala</samp>, <samp>vb</samp>, <samp>vbnet</samp>, <samp>vedit</samp>, <samp>verilog</samp>, <samp>vhdl</samp>, <samp>vim</samp>, <samp>visualfoxpro</samp>, <samp>visualprolog</samp>, <samp>whitespace</samp>, <samp>whois</samp>, <samp>winbatch</samp>, <samp>xbasic</samp>, <samp>xml</samp>, <samp>xorg_conf</samp>, <samp>xpp</samp>, <samp>yaml</samp>, <samp>z80</samp>, <samp>zxbasic</samp></p><br style="clear: all"/></div><pre>besctl start

bescmdln -h localhost -p 10022 -i 1990-S1700101.HDF.dds.bescmd</pre>
<p>Here's the version using besstandalone:
</p>
<div style="border: solid red 1px; padding: .5em;"><p>Invalid language.</p><p>You need to specify a language like this: <samp>&lt;source lang=&quot;html4strict&quot;&gt;...&lt;/source&gt;</samp></p><p>Supported languages for syntax highlighting:</p><p class="mw-collapsible mw-collapsed" style="padding: 0em 1em;"><samp>4cs</samp>, <samp>6502acme</samp>, <samp>6502kickass</samp>, <samp>6502tasm</samp>, <samp>68000devpac</samp>, <samp>abap</samp>, <samp>actionscript</samp>, <samp>actionscript3</samp>, <samp>ada</samp>, <samp>algol68</samp>, <samp>apache</samp>, <samp>applescript</samp>, <samp>apt_sources</samp>, <samp>arm</samp>, <samp>asm</samp>, <samp>asp</samp>, <samp>asymptote</samp>, <samp>autoconf</samp>, <samp>autohotkey</samp>, <samp>autoit</samp>, <samp>avisynth</samp>, <samp>awk</samp>, <samp>bascomavr</samp>, <samp>bash</samp>, <samp>basic4gl</samp>, <samp>bf</samp>, <samp>bibtex</samp>, <samp>blitzbasic</samp>, <samp>bnf</samp>, <samp>boo</samp>, <samp>c</samp>, <samp>c_loadrunner</samp>, <samp>c_mac</samp>, <samp>caddcl</samp>, <samp>cadlisp</samp>, <samp>cfdg</samp>, <samp>cfm</samp>, <samp>chaiscript</samp>, <samp>cil</samp>, <samp>clojure</samp>, <samp>cmake</samp>, <samp>cobol</samp>, <samp>coffeescript</samp>, <samp>cpp</samp>, <samp>cpp-qt</samp>, <samp>csharp</samp>, <samp>css</samp>, <samp>cuesheet</samp>, <samp>d</samp>, <samp>dcl</samp>, <samp>dcpu16</samp>, <samp>dcs</samp>, <samp>delphi</samp>, <samp>diff</samp>, <samp>div</samp>, <samp>dos</samp>, <samp>dot</samp>, <samp>e</samp>, <samp>ecmascript</samp>, <samp>eiffel</samp>, <samp>email</samp>, <samp>epc</samp>, <samp>erlang</samp>, <samp>euphoria</samp>, <samp>f1</samp>, <samp>falcon</samp>, <samp>fo</samp>, <samp>fortran</samp>, <samp>freebasic</samp>, <samp>freeswitch</samp>, <samp>fsharp</samp>, <samp>gambas</samp>, <samp>gdb</samp>, <samp>genero</samp>, <samp>genie</samp>, <samp>gettext</samp>, <samp>glsl</samp>, <samp>gml</samp>, <samp>gnuplot</samp>, <samp>go</samp>, <samp>groovy</samp>, <samp>gwbasic</samp>, <samp>haskell</samp>, <samp>haxe</samp>, <samp>hicest</samp>, <samp>hq9plus</samp>, <samp>html4strict</samp>, <samp>html5</samp>, <samp>icon</samp>, <samp>idl</samp>, <samp>ini</samp>, <samp>inno</samp>, <samp>intercal</samp>, <samp>io</samp>, <samp>j</samp>, <samp>java</samp>, <samp>java5</samp>, <samp>javascript</samp>, <samp>jquery</samp>, <samp>kixtart</samp>, <samp>klonec</samp>, <samp>klonecpp</samp>, <samp>latex</samp>, <samp>lb</samp>, <samp>ldif</samp>, <samp>lisp</samp>, <samp>llvm</samp>, <samp>locobasic</samp>, <samp>logtalk</samp>, <samp>lolcode</samp>, <samp>lotusformulas</samp>, <samp>lotusscript</samp>, <samp>lscript</samp>, <samp>lsl2</samp>, <samp>lua</samp>, <samp>m68k</samp>, <samp>magiksf</samp>, <samp>make</samp>, <samp>mapbasic</samp>, <samp>matlab</samp>, <samp>mirc</samp>, <samp>mmix</samp>, <samp>modula2</samp>, <samp>modula3</samp>, <samp>mpasm</samp>, <samp>mxml</samp>, <samp>mysql</samp>, <samp>nagios</samp>, <samp>netrexx</samp>, <samp>newlisp</samp>, <samp>nsis</samp>, <samp>oberon2</samp>, <samp>objc</samp>, <samp>objeck</samp>, <samp>ocaml</samp>, <samp>ocaml-brief</samp>, <samp>octave</samp>, <samp>oobas</samp>, <samp>oorexx</samp>, <samp>oracle11</samp>, <samp>oracle8</samp>, <samp>oxygene</samp>, <samp>oz</samp>, <samp>parasail</samp>, <samp>parigp</samp>, <samp>pascal</samp>, <samp>pcre</samp>, <samp>per</samp>, <samp>perl</samp>, <samp>perl6</samp>, <samp>pf</samp>, <samp>php</samp>, <samp>php-brief</samp>, <samp>pic16</samp>, <samp>pike</samp>, <samp>pixelbender</samp>, <samp>pli</samp>, <samp>plsql</samp>, <samp>postgresql</samp>, <samp>povray</samp>, <samp>powerbuilder</samp>, <samp>powershell</samp>, <samp>proftpd</samp>, <samp>progress</samp>, <samp>prolog</samp>, <samp>properties</samp>, <samp>providex</samp>, <samp>purebasic</samp>, <samp>pycon</samp>, <samp>pys60</samp>, <samp>python</samp>, <samp>q</samp>, <samp>qbasic</samp>, <samp>rails</samp>, <samp>rebol</samp>, <samp>reg</samp>, <samp>rexx</samp>, <samp>robots</samp>, <samp>rpmspec</samp>, <samp>rsplus</samp>, <samp>ruby</samp>, <samp>sas</samp>, <samp>scala</samp>, <samp>scheme</samp>, <samp>scilab</samp>, <samp>sdlbasic</samp>, <samp>smalltalk</samp>, <samp>smarty</samp>, <samp>spark</samp>, <samp>sparql</samp>, <samp>sql</samp>, <samp>stonescript</samp>, <samp>systemverilog</samp>, <samp>tcl</samp>, <samp>teraterm</samp>, <samp>text</samp>, <samp>thinbasic</samp>, <samp>tsql</samp>, <samp>typoscript</samp>, <samp>unicon</samp>, <samp>upc</samp>, <samp>urbi</samp>, <samp>uscript</samp>, <samp>vala</samp>, <samp>vb</samp>, <samp>vbnet</samp>, <samp>vedit</samp>, <samp>verilog</samp>, <samp>vhdl</samp>, <samp>vim</samp>, <samp>visualfoxpro</samp>, <samp>visualprolog</samp>, <samp>whitespace</samp>, <samp>whois</samp>, <samp>winbatch</samp>, <samp>xbasic</samp>, <samp>xml</samp>, <samp>xorg_conf</samp>, <samp>xpp</samp>, <samp>yaml</samp>, <samp>z80</samp>, <samp>zxbasic</samp></p><br style="clear: all"/></div><pre>besstandalone -c bes.conf -i 1990-S1700101.HDF.dds.bescmd</pre>
<p>Note that if you try this you will see that most of the regression tests use bes command files that reference local data and the paths are a bit different than when those same data sets are installed in a running server.
</p>
<h1><span class="mw-headline" id="Some_Tricks"><span class="mw-headline-number">4</span> Some Tricks</span></h1>
<h2><span class="mw-headline" id="Using_besstandalone_and_the_BESDEBUG_instrumentation_macro"><span class="mw-headline-number">4.1</span> Using besstandalone and the BESDEBUG instrumentation macro</span></h2>
<p>The BES supports a flexible run-time instrumentation system that you can access using besstandalone (there are other ways too, see the <a href="../index.php/Hyrax_Admin_Interface" title="Hyrax Admin Interface">Hyrax Admin Interface</a>). Here's an example of instrumentation:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="kw4">void</span>
HDF4Module<span class="sy4">::</span><span class="me2">initialize</span><span class="br0">&#40;</span><span class="kw4">const</span> string <span class="sy3">&amp;</span> modname<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    BESDEBUG<span class="br0">&#40;</span><span class="st0">&quot;h4&quot;</span>, <span class="st0">&quot;Initializing HDF4 module &quot;</span> <span class="sy1">&lt;&lt;</span> modname <span class="sy1">&lt;&lt;</span> endl<span class="br0">&#41;</span> <span class="sy4">;</span>
&#160;
    BESRequestHandler <span class="sy2">*</span>handler <span class="sy1">=</span> <span class="kw3">new</span> HDF4RequestHandler<span class="br0">&#40;</span>modname<span class="br0">&#41;</span><span class="sy4">;</span>
    BESRequestHandlerList<span class="sy4">::</span><span class="me2">TheList</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>add_handler<span class="br0">&#40;</span>modname, handler<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
    ...</pre></div></div>
<p>The instrumentation macro is <i>BESDEBUG</i>. To 'turn on' this and see the output, start <i>besstandalone</i> using the <i>-d</i> option. When you specify the debug option, you need to provide one argument which names the output sink for the debugging information and one or more 'selector names'. An example will make things clearer. To see the output from the above BESDEBUG call, you would pass this option to besstandalone: <i>-d "cerr,h4"</i>. Here's how you would run it:
</p>
<div style="border: solid red 1px; padding: .5em;"><p>Invalid language.</p><p>You need to specify a language like this: <samp>&lt;source lang=&quot;html4strict&quot;&gt;...&lt;/source&gt;</samp></p><p>Supported languages for syntax highlighting:</p><p class="mw-collapsible mw-collapsed" style="padding: 0em 1em;"><samp>4cs</samp>, <samp>6502acme</samp>, <samp>6502kickass</samp>, <samp>6502tasm</samp>, <samp>68000devpac</samp>, <samp>abap</samp>, <samp>actionscript</samp>, <samp>actionscript3</samp>, <samp>ada</samp>, <samp>algol68</samp>, <samp>apache</samp>, <samp>applescript</samp>, <samp>apt_sources</samp>, <samp>arm</samp>, <samp>asm</samp>, <samp>asp</samp>, <samp>asymptote</samp>, <samp>autoconf</samp>, <samp>autohotkey</samp>, <samp>autoit</samp>, <samp>avisynth</samp>, <samp>awk</samp>, <samp>bascomavr</samp>, <samp>bash</samp>, <samp>basic4gl</samp>, <samp>bf</samp>, <samp>bibtex</samp>, <samp>blitzbasic</samp>, <samp>bnf</samp>, <samp>boo</samp>, <samp>c</samp>, <samp>c_loadrunner</samp>, <samp>c_mac</samp>, <samp>caddcl</samp>, <samp>cadlisp</samp>, <samp>cfdg</samp>, <samp>cfm</samp>, <samp>chaiscript</samp>, <samp>cil</samp>, <samp>clojure</samp>, <samp>cmake</samp>, <samp>cobol</samp>, <samp>coffeescript</samp>, <samp>cpp</samp>, <samp>cpp-qt</samp>, <samp>csharp</samp>, <samp>css</samp>, <samp>cuesheet</samp>, <samp>d</samp>, <samp>dcl</samp>, <samp>dcpu16</samp>, <samp>dcs</samp>, <samp>delphi</samp>, <samp>diff</samp>, <samp>div</samp>, <samp>dos</samp>, <samp>dot</samp>, <samp>e</samp>, <samp>ecmascript</samp>, <samp>eiffel</samp>, <samp>email</samp>, <samp>epc</samp>, <samp>erlang</samp>, <samp>euphoria</samp>, <samp>f1</samp>, <samp>falcon</samp>, <samp>fo</samp>, <samp>fortran</samp>, <samp>freebasic</samp>, <samp>freeswitch</samp>, <samp>fsharp</samp>, <samp>gambas</samp>, <samp>gdb</samp>, <samp>genero</samp>, <samp>genie</samp>, <samp>gettext</samp>, <samp>glsl</samp>, <samp>gml</samp>, <samp>gnuplot</samp>, <samp>go</samp>, <samp>groovy</samp>, <samp>gwbasic</samp>, <samp>haskell</samp>, <samp>haxe</samp>, <samp>hicest</samp>, <samp>hq9plus</samp>, <samp>html4strict</samp>, <samp>html5</samp>, <samp>icon</samp>, <samp>idl</samp>, <samp>ini</samp>, <samp>inno</samp>, <samp>intercal</samp>, <samp>io</samp>, <samp>j</samp>, <samp>java</samp>, <samp>java5</samp>, <samp>javascript</samp>, <samp>jquery</samp>, <samp>kixtart</samp>, <samp>klonec</samp>, <samp>klonecpp</samp>, <samp>latex</samp>, <samp>lb</samp>, <samp>ldif</samp>, <samp>lisp</samp>, <samp>llvm</samp>, <samp>locobasic</samp>, <samp>logtalk</samp>, <samp>lolcode</samp>, <samp>lotusformulas</samp>, <samp>lotusscript</samp>, <samp>lscript</samp>, <samp>lsl2</samp>, <samp>lua</samp>, <samp>m68k</samp>, <samp>magiksf</samp>, <samp>make</samp>, <samp>mapbasic</samp>, <samp>matlab</samp>, <samp>mirc</samp>, <samp>mmix</samp>, <samp>modula2</samp>, <samp>modula3</samp>, <samp>mpasm</samp>, <samp>mxml</samp>, <samp>mysql</samp>, <samp>nagios</samp>, <samp>netrexx</samp>, <samp>newlisp</samp>, <samp>nsis</samp>, <samp>oberon2</samp>, <samp>objc</samp>, <samp>objeck</samp>, <samp>ocaml</samp>, <samp>ocaml-brief</samp>, <samp>octave</samp>, <samp>oobas</samp>, <samp>oorexx</samp>, <samp>oracle11</samp>, <samp>oracle8</samp>, <samp>oxygene</samp>, <samp>oz</samp>, <samp>parasail</samp>, <samp>parigp</samp>, <samp>pascal</samp>, <samp>pcre</samp>, <samp>per</samp>, <samp>perl</samp>, <samp>perl6</samp>, <samp>pf</samp>, <samp>php</samp>, <samp>php-brief</samp>, <samp>pic16</samp>, <samp>pike</samp>, <samp>pixelbender</samp>, <samp>pli</samp>, <samp>plsql</samp>, <samp>postgresql</samp>, <samp>povray</samp>, <samp>powerbuilder</samp>, <samp>powershell</samp>, <samp>proftpd</samp>, <samp>progress</samp>, <samp>prolog</samp>, <samp>properties</samp>, <samp>providex</samp>, <samp>purebasic</samp>, <samp>pycon</samp>, <samp>pys60</samp>, <samp>python</samp>, <samp>q</samp>, <samp>qbasic</samp>, <samp>rails</samp>, <samp>rebol</samp>, <samp>reg</samp>, <samp>rexx</samp>, <samp>robots</samp>, <samp>rpmspec</samp>, <samp>rsplus</samp>, <samp>ruby</samp>, <samp>sas</samp>, <samp>scala</samp>, <samp>scheme</samp>, <samp>scilab</samp>, <samp>sdlbasic</samp>, <samp>smalltalk</samp>, <samp>smarty</samp>, <samp>spark</samp>, <samp>sparql</samp>, <samp>sql</samp>, <samp>stonescript</samp>, <samp>systemverilog</samp>, <samp>tcl</samp>, <samp>teraterm</samp>, <samp>text</samp>, <samp>thinbasic</samp>, <samp>tsql</samp>, <samp>typoscript</samp>, <samp>unicon</samp>, <samp>upc</samp>, <samp>urbi</samp>, <samp>uscript</samp>, <samp>vala</samp>, <samp>vb</samp>, <samp>vbnet</samp>, <samp>vedit</samp>, <samp>verilog</samp>, <samp>vhdl</samp>, <samp>vim</samp>, <samp>visualfoxpro</samp>, <samp>visualprolog</samp>, <samp>whitespace</samp>, <samp>whois</samp>, <samp>winbatch</samp>, <samp>xbasic</samp>, <samp>xml</samp>, <samp>xorg_conf</samp>, <samp>xpp</samp>, <samp>yaml</samp>, <samp>z80</samp>, <samp>zxbasic</samp></p><br style="clear: all"/></div><pre>besstandalone -d &quot;cerr,h4&quot; -c bes.conf -i 1990-S1700101.HDF.dds.bescmd</pre>
<p>Of course, <i>cerr</i> is C++'s standard error output sink; you can use <i>cout</i> or the name of a file instead. Also, you can list a number of selectors, so your handler may have separate BESDEBUG calls for initialization, run-time status, some tricky parts of the code, ...
</p>
<h2><span class="mw-headline" id="Filtering_binary_output_using_getdap"><span class="mw-headline-number">4.2</span> Filtering binary output using getdap</span></h2>
<p>One thing that's nice about DAP is that so many of the responses are ASCII or XML. That makes them easy (relatively) to debug when compared to binary outputs. But data is binary in most of these datasets and DAP transmits it that way for obvious efficiency reasons. The <i>getdap</i> command line client can be used to filter the binary data response object returned by the bes so that the data values are rendered as ASCII (but without using the server's ASCII output capability). Here's what that looks like.
</p><p>Given:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="xml source-xml"><pre class="de1"><span class="sc3"><span class="re1">&lt;?xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;UTF-8&quot;</span><span class="re2">?&gt;</span></span>
<span class="sc3"><span class="re1">&lt;request</span> <span class="re0">reqID</span>=<span class="st0">&quot;some_unique_value&quot;</span> <span class="re2">&gt;</span></span>
    <span class="sc3"><span class="re1">&lt;setContext</span> <span class="re0">name</span>=<span class="st0">&quot;dap_format&quot;</span><span class="re2">&gt;</span></span>dap2<span class="sc3"><span class="re1">&lt;/setContext<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;setContainer</span> <span class="re0">name</span>=<span class="st0">&quot;data&quot;</span> <span class="re0">space</span>=<span class="st0">&quot;catalog&quot;</span><span class="re2">&gt;</span></span>/data/foo2.hdf.gz<span class="sc3"><span class="re1">&lt;/setContainer<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;define</span> <span class="re0">name</span>=<span class="st0">&quot;d&quot;</span><span class="re2">&gt;</span></span>
	<span class="sc3"><span class="re1">&lt;container</span> <span class="re0">name</span>=<span class="st0">&quot;data&quot;</span> <span class="re2">/&gt;</span></span>
    <span class="sc3"><span class="re1">&lt;/define<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;get</span> <span class="re0">type</span>=<span class="st0">&quot;dods&quot;</span> <span class="re0">definition</span>=<span class="st0">&quot;d&quot;</span> <span class="re2">/&gt;</span></span>
<span class="sc3"><span class="re1">&lt;/request<span class="re2">&gt;</span></span></span></pre></div></div>
<div style="border: solid red 1px; padding: .5em;"><p>Invalid language.</p><p>You need to specify a language like this: <samp>&lt;source lang=&quot;html4strict&quot;&gt;...&lt;/source&gt;</samp></p><p>Supported languages for syntax highlighting:</p><p class="mw-collapsible mw-collapsed" style="padding: 0em 1em;"><samp>4cs</samp>, <samp>6502acme</samp>, <samp>6502kickass</samp>, <samp>6502tasm</samp>, <samp>68000devpac</samp>, <samp>abap</samp>, <samp>actionscript</samp>, <samp>actionscript3</samp>, <samp>ada</samp>, <samp>algol68</samp>, <samp>apache</samp>, <samp>applescript</samp>, <samp>apt_sources</samp>, <samp>arm</samp>, <samp>asm</samp>, <samp>asp</samp>, <samp>asymptote</samp>, <samp>autoconf</samp>, <samp>autohotkey</samp>, <samp>autoit</samp>, <samp>avisynth</samp>, <samp>awk</samp>, <samp>bascomavr</samp>, <samp>bash</samp>, <samp>basic4gl</samp>, <samp>bf</samp>, <samp>bibtex</samp>, <samp>blitzbasic</samp>, <samp>bnf</samp>, <samp>boo</samp>, <samp>c</samp>, <samp>c_loadrunner</samp>, <samp>c_mac</samp>, <samp>caddcl</samp>, <samp>cadlisp</samp>, <samp>cfdg</samp>, <samp>cfm</samp>, <samp>chaiscript</samp>, <samp>cil</samp>, <samp>clojure</samp>, <samp>cmake</samp>, <samp>cobol</samp>, <samp>coffeescript</samp>, <samp>cpp</samp>, <samp>cpp-qt</samp>, <samp>csharp</samp>, <samp>css</samp>, <samp>cuesheet</samp>, <samp>d</samp>, <samp>dcl</samp>, <samp>dcpu16</samp>, <samp>dcs</samp>, <samp>delphi</samp>, <samp>diff</samp>, <samp>div</samp>, <samp>dos</samp>, <samp>dot</samp>, <samp>e</samp>, <samp>ecmascript</samp>, <samp>eiffel</samp>, <samp>email</samp>, <samp>epc</samp>, <samp>erlang</samp>, <samp>euphoria</samp>, <samp>f1</samp>, <samp>falcon</samp>, <samp>fo</samp>, <samp>fortran</samp>, <samp>freebasic</samp>, <samp>freeswitch</samp>, <samp>fsharp</samp>, <samp>gambas</samp>, <samp>gdb</samp>, <samp>genero</samp>, <samp>genie</samp>, <samp>gettext</samp>, <samp>glsl</samp>, <samp>gml</samp>, <samp>gnuplot</samp>, <samp>go</samp>, <samp>groovy</samp>, <samp>gwbasic</samp>, <samp>haskell</samp>, <samp>haxe</samp>, <samp>hicest</samp>, <samp>hq9plus</samp>, <samp>html4strict</samp>, <samp>html5</samp>, <samp>icon</samp>, <samp>idl</samp>, <samp>ini</samp>, <samp>inno</samp>, <samp>intercal</samp>, <samp>io</samp>, <samp>j</samp>, <samp>java</samp>, <samp>java5</samp>, <samp>javascript</samp>, <samp>jquery</samp>, <samp>kixtart</samp>, <samp>klonec</samp>, <samp>klonecpp</samp>, <samp>latex</samp>, <samp>lb</samp>, <samp>ldif</samp>, <samp>lisp</samp>, <samp>llvm</samp>, <samp>locobasic</samp>, <samp>logtalk</samp>, <samp>lolcode</samp>, <samp>lotusformulas</samp>, <samp>lotusscript</samp>, <samp>lscript</samp>, <samp>lsl2</samp>, <samp>lua</samp>, <samp>m68k</samp>, <samp>magiksf</samp>, <samp>make</samp>, <samp>mapbasic</samp>, <samp>matlab</samp>, <samp>mirc</samp>, <samp>mmix</samp>, <samp>modula2</samp>, <samp>modula3</samp>, <samp>mpasm</samp>, <samp>mxml</samp>, <samp>mysql</samp>, <samp>nagios</samp>, <samp>netrexx</samp>, <samp>newlisp</samp>, <samp>nsis</samp>, <samp>oberon2</samp>, <samp>objc</samp>, <samp>objeck</samp>, <samp>ocaml</samp>, <samp>ocaml-brief</samp>, <samp>octave</samp>, <samp>oobas</samp>, <samp>oorexx</samp>, <samp>oracle11</samp>, <samp>oracle8</samp>, <samp>oxygene</samp>, <samp>oz</samp>, <samp>parasail</samp>, <samp>parigp</samp>, <samp>pascal</samp>, <samp>pcre</samp>, <samp>per</samp>, <samp>perl</samp>, <samp>perl6</samp>, <samp>pf</samp>, <samp>php</samp>, <samp>php-brief</samp>, <samp>pic16</samp>, <samp>pike</samp>, <samp>pixelbender</samp>, <samp>pli</samp>, <samp>plsql</samp>, <samp>postgresql</samp>, <samp>povray</samp>, <samp>powerbuilder</samp>, <samp>powershell</samp>, <samp>proftpd</samp>, <samp>progress</samp>, <samp>prolog</samp>, <samp>properties</samp>, <samp>providex</samp>, <samp>purebasic</samp>, <samp>pycon</samp>, <samp>pys60</samp>, <samp>python</samp>, <samp>q</samp>, <samp>qbasic</samp>, <samp>rails</samp>, <samp>rebol</samp>, <samp>reg</samp>, <samp>rexx</samp>, <samp>robots</samp>, <samp>rpmspec</samp>, <samp>rsplus</samp>, <samp>ruby</samp>, <samp>sas</samp>, <samp>scala</samp>, <samp>scheme</samp>, <samp>scilab</samp>, <samp>sdlbasic</samp>, <samp>smalltalk</samp>, <samp>smarty</samp>, <samp>spark</samp>, <samp>sparql</samp>, <samp>sql</samp>, <samp>stonescript</samp>, <samp>systemverilog</samp>, <samp>tcl</samp>, <samp>teraterm</samp>, <samp>text</samp>, <samp>thinbasic</samp>, <samp>tsql</samp>, <samp>typoscript</samp>, <samp>unicon</samp>, <samp>upc</samp>, <samp>urbi</samp>, <samp>uscript</samp>, <samp>vala</samp>, <samp>vb</samp>, <samp>vbnet</samp>, <samp>vedit</samp>, <samp>verilog</samp>, <samp>vhdl</samp>, <samp>vim</samp>, <samp>visualfoxpro</samp>, <samp>visualprolog</samp>, <samp>whitespace</samp>, <samp>whois</samp>, <samp>winbatch</samp>, <samp>xbasic</samp>, <samp>xml</samp>, <samp>xorg_conf</samp>, <samp>xpp</samp>, <samp>yaml</samp>, <samp>z80</samp>, <samp>zxbasic</samp></p><br style="clear: all"/></div><pre>besstandalone -d &quot;cerr,h4&quot; -c bes.conf -i foo2.hdf.data.bescmd | getdap -M -</pre>
<p>Where the option <i>-M</i> tells getdap to strip off any MIME headers in the response and the dash tells it to read from stdin.
</p>

</div>
				<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
</body></html>