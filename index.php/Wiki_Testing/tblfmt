
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Wiki Testing/tblfmt - OPeNDAP Documentation</title>
</head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Wiki_Testing_tblfmt skin-monobook action-view">
<div id="globalWrapper">
<div id="column-content"><div id="content" class="mw-body-primary" role="main">
	
	
	<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Wiki Testing/tblfmt</span></h1>
	<div id="bodyContent" class="mw-body">
		<div id="siteSub">From OPeNDAP Documentation</div>
		<div id="contentSub"></div>
		

		<!-- start content -->
<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p><a href="../index.php/FreeForm" title="FreeForm">return to FreeForm</a>
</p>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Format_Descriptions_for_Tabular_Data"><span class="tocnumber">1</span> <span class="toctext">Format Descriptions for Tabular Data</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#FreeForm_ND_Variable_Types"><span class="tocnumber">1.1</span> <span class="toctext">FreeForm ND Variable Types</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="#FreeForm_ND_File_Types"><span class="tocnumber">1.2</span> <span class="toctext">FreeForm ND File Types</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="#Format_Description_Files"><span class="tocnumber">1.3</span> <span class="toctext">Format Description Files</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Format_Descriptions"><span class="tocnumber">1.4</span> <span class="toctext">Format Descriptions</span></a>
<ul>
<li class="toclevel-3 tocsection-6"><a href="#Format_Type_and_Title"><span class="tocnumber">1.4.1</span> <span class="toctext">Format Type and Title</span></a>
<ul>
<li class="toclevel-4 tocsection-7"><a href="#Format_Descriptors"><span class="tocnumber">1.4.1.1</span> <span class="toctext">Format Descriptors</span></a></li>
</ul>
</li>
<li class="toclevel-3 tocsection-8"><a href="#Variable_Descriptions"><span class="tocnumber">1.4.2</span> <span class="toctext">Variable Descriptions</span></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

<h1><span class="mw-headline" id="Format_Descriptions_for_Tabular_Data"><span class="mw-headline-number">1</span> Format Descriptions for Tabular Data</span></h1>
<p>Format descriptions define the formats of input and output data and
headers. FreeForm ND provides an easy-to-use mechanism for describing
data. FreeForm ND programs and FreeForm ND-based applications that you
develop use these format descriptions to correctly access data. Any
data file used by FreeForm ND programs must be described in a format
description file.
</p><p>This page explains how to write format descriptions for data
arranged in tabular format---rows and columns---only. For data in
non-tabular formats, see <a href="../index.php/Wiki_Testing/arrayfmt" title="Wiki Testing/arrayfmt">Array Format</a>.
</p>
<h2><span class="mw-headline" id="FreeForm_ND_Variable_Types"><span class="mw-headline-number">1.1</span> FreeForm ND Variable Types</span></h2>
<p>The data sets you produce and use may contain a variety of variable
types. The characteristics of the types that FreeForm ND supports are
summarized in the table below, which is followed by a
description of each type.
</p>
<center>
<pre>OPeNDAP FreeForm ND Data Types
</pre>
<table border="1">
<tr>
<th> Name  </th>
<th> Minimum Value </th>
<th> Maximum Value </th>
<th> Size in Bytes </th>
<th> Precision*
</th></tr>
<tr>
<td> <font color="green">char</font> </td>
<td>  </td>
<td>  </td>
<td> ** </td>
<td>
</td></tr>
<tr>
<td> <font color="green">uchar</font> </td>
<td> 0 </td>
<td> 255 </td>
<td> 1 </td>
<td>
</td></tr>
<tr>
<td> <font color="green">short</font> </td>
<td> -32,767 </td>
<td> 32,767 </td>
<td> 2 </td>
<td>
</td></tr>
<tr>
<td><font color="green">ushort</font> </td>
<td> 0 </td>
<td> 65,535 </td>
<td> 2 </td>
<td>
</td></tr>
<tr>
<td> <font color="green">long</font> </td>
<td> -2,147,483,647 </td>
<td> 2,147,483,647 </td>
<td> 4 </td>
<td>
</td></tr>
<tr>
<td> <font color="green">ulong</font> </td>
<td> 0 </td>
<td> 4,294,967,295 </td>
<td> 4 </td>
<td>
</td></tr>
<tr>
<td> <font color="green">float</font> </td>
<td> &lt;math&gt;10^{-37}&lt;/math&gt; </td>
<td> &lt;math&gt;10^{38}&lt;/math&gt; </td>
<td> 4 </td>
<td> 6***
</td></tr>
<tr>
<td> <font color="green">double</font> </td>
<td> &lt;math&gt;10^{-307}&lt;/math&gt; </td>
<td> &lt;math&gt;10^{308}&lt;/math&gt; </td>
<td> 8 </td>
<td> 15***
</td></tr>
<tr>
<td> <font color="green">constant</font> </td>
<td>  </td>
<td>  </td>
<td> ** </td>
<td>
</td></tr>
<tr>
<td> <font color="green">initial</font> </td>
<td>  </td>
<td>  </td>
<td> record length </td>
<td>
</td></tr>
<tr>
<td> <font color="green">convert</font> </td>
<td>  </td>
<td>  </td>
<td> ** </td>
<td>
</td></tr>
<tr>
<td> * Expressed as the number of significant digits
</td></tr>
<tr>
<td> ** User-specified
</td></tr>
<tr>
<td> *** Can vary depending on environment
</td></tr></table>
</center>
<blockquote>NOTE: The sizes in table 3.1 are machine-dependent.
Those given are for most Unix workstations.  </blockquote>
<p><br />
</p>
<dl>
<dt> <font color="green">char</font>&#160;</dt>
<dd> The <font color="green">char</font> variable type is used for character strings. Variables of this type, including numerals, are interpreted as characters, not as numbers.
</dd>
</dl>
<dl>
<dt> <font color="green">uchar</font>&#160;</dt>
<dd> The <font color="green">uchar</font> (unsigned character) variable type can be used for integers between 0 and 255 (28- 1). Variables that can be represented by the <font color="green">uchar</font> type (for example: month, day, hour, minute) occur in many data sets. An advantage of using the <font color="green">uchar</font> type in binary formats is that only one byte is used for each variable. Variables of this type are interpreted as numbers, not characters.
</dd>
</dl>
<dl>
<dt> <font color="green">short</font>&#160;</dt>
<dd> A <font color="green">short</font> variable can hold integers between -32,767 and 32,767 (&lt;math&gt;2^{15}- 1&lt;/math&gt;). This type can be used for signed integers with less than 5 digits, or for real numbers with a total of 4 or fewer digits on both sides of the decimal point (-99 to 99 with a precision of 2, -999 to 999 with a precision of 1, and so on).
</dd>
</dl>
<dl>
<dt> <font color="green">ushort</font>&#160;</dt>
<dd> A <font color="green">ushort</font> (unsigned short) variable can hold integers between 0 and 65,535 (&lt;math&gt;2^{16} - 1&lt;/math&gt;).
</dd>
</dl>
<dl>
<dt> <font color="green">long</font>&#160;</dt>
<dd> A <font color="green">long</font> variable can hold integers between -2,147,483,647 and +2,147,483,647 (&lt;math&gt;2^{31} - 1&lt;/math&gt;). This variable type is commonly used to represent floating point data as integers, which may be more portable. It can be used for numbers with 9 or fewer digits with up to 9 digits of precision, for example, latitude or longitude (-180.000000 to 180.000000).
</dd>
</dl>
<dl>
<dt> <font color="green">ulong</font>&#160;</dt>
<dd> The <font color="green">ulong</font> (unsigned long) variable type can be used for integers between 0 and 4,294,967,295 (&lt;math&gt;2^{32} - 1&lt;/math&gt;).
</dd>
</dl>
<dl>
<dt> <font color="green">float, double</font>&#160;</dt>
<dd> Numbers that include explicit decimal points are either <font color="green">float</font> or <font color="green">double</font> depending on the desired number of digits. A <font color="green">float</font> has a maximum of 6 significant digits, a <font color="green">double</font> has 15 maximum. The extra digits of a <font color="green">double</font> are useful, for example, for precisely specifying time of day within a month as decimal days. One second of time is approximately 0.00001 day. The number specifying day (maximum = 31) can occupy up to 2 digits. A <font color="green">float</font> can therefore only specify decimal days to a whole second (31.00001 occupies seven digits). A <font color="green">double</font> can, however, be used to track decimal parts of a second (for example, 31.000001).
</dd>
</dl>
<p><br />
</p>
<h2><span class="mw-headline" id="FreeForm_ND_File_Types"><span class="mw-headline-number">1.2</span> FreeForm ND File Types</span></h2>
<p>FreeForm ND supports binary, ASCII, and dBASE file types. Binary data
are stored in a fixed amount of space with a fixed range of values.
This is a very efficient way to store data, but the files are
machine-readable rather than human-readable. Binary numbers can be
integers or floating point numbers.
</p><p>Numbers and character strings are stored as text strings in ASCII. The
amount of space used to store a string is variable, with each
character occupying one byte.
</p><p>The dBASE file type, used by the dBASE product, is ASCII text without
end-of-line markers.
</p>
<h2><span class="mw-headline" id="Format_Description_Files"><span class="mw-headline-number">1.3</span> Format Description Files</span></h2>
<p>Format description files accompany data files. A format description
file can contain descriptions for one or more formats. You include
descriptions for header, input, and output formats as appropriate.
Format descriptions for more than one file may be included in a single
format description file.
</p><p>An example format description file is shown next. The sections that
follow describe each element of a format description file.
</p>
<pre>
/ This format description file is for
/ data files latlon.bin and latlon.dat.

binary_data &quot;Default binary format&quot;
latitude 1 4 long 6
longitude 5 8 long 6

ASCII_data &quot;Default ASCII format&quot;
latitude 1 10 double 6
longitude 12 22 double 6
</pre>
<p>Lines 1 and 2 are comment lines.  Lines 4 and 8 give the format type and title. Lines 5, 6,
9, and 10 contain variable descriptions.  Blank lines signify the end of a format
description
</p><p><br />
You can include blank lines between format descriptions and comments
in a format description file as necessary.  Comment lines begin with a
slash (/). FreeForm ND ignores comments.
</p>
<h2><span class="mw-headline" id="Format_Descriptions"><span class="mw-headline-number">1.4</span> Format Descriptions</span></h2>
<p>A format description file comprises one or more format descriptions. A
format description consists of a line specifying the format type and
title followed by one or more variable descriptions, as in the
following example:
</p>
<pre>
binary_data &quot;Default binary format&quot;
latitude 1 4 long 6
longitude 5 8 long 6
</pre>
<h3><span class="mw-headline" id="Format_Type_and_Title"><span class="mw-headline-number">1.4.1</span> Format Type and Title</span></h3>
<p>A line specifying the format type and title begins a format
description. A <i>format descriptor</i>, for example, <font color="green">binary_data</font>, is
used to indicate format type to FreeForm ND. The <i>format title</i>, for
example, "Default binary format", briefly describes the format. It
must be surrounded by quotes and follow the format descriptor on the
same line. The maximum number of characters for the format title is 80
including the quotes.
</p>
<h4><span class="mw-headline" id="Format_Descriptors"><span class="mw-headline-number">1.4.1.1</span> Format Descriptors</span></h4>
<p>Format descriptors indicate (in the order given) file type, read/write
type, and file section. Possible values for each descriptor component
are shown in the following table.
</p>
<center>
<p>Format Descriptor Components
</p>
<table border="1">
<caption>
</caption>
<tr>
<th> File Type  </th>
<th> Read/Write Type (optional) </th>
<th> File Section
</th></tr>
<tr>
<td>
<table border="1">
<caption>
</caption>
<tr>
<td> <font color="green">ASCII</font>
</td></tr>
<tr>
<td> <font color="green">binary</font>
</td></tr>
<tr>
<td> <font color="green">dBASE</font>
</td></tr></table>
</td>
<td>
<table border="1">
<caption>
</caption>
<tr>
<td> <font color="green">input</font>
</td></tr>
<tr>
<td> <font color="green">output</font>
</td></tr></table>
</td>
<td>
<table border="1">
<caption>
</caption>
<tr>
<td> <font color="green">data</font>
</td></tr>
<tr>
<td> <font color="green">file_header</font>
</td></tr>
<tr>
<td><font color="green">record_header</font>
</td></tr>
<tr>
<td><font color="green">file_header_separate</font>*
</td></tr>
<tr>
<td><font color="green">record_header_separate</font>*
</td></tr></table>
</td></tr>
<tr>
<td colspan="3"> * The qualifier <font color="green">separate</font> indicates there is a header file separate from the data file.
</td></tr></table>
</center>
<p>The components of a format descriptor are separated by underscores
(_). For example, <font color="green">ASCII_output_data</font> indicates that the format
description is for ASCII data in an output file. The order of
descriptors in a format description should reflect the order of format
types in the file. For instance, the descriptor
<font color="green">ASCII_file_header</font> would be listed in the format description
file before <font color="green">ASCII_data</font>. The format descriptors you can use in
FreeForm ND are listed in the next table, where <font color="green">XXX</font> stands for
<font color="green">ASCII</font>, <font color="green">binary</font>, or <font color="green">dBASE</font>.  (Example: <font color="green">XXX_data</font>
= <font color="green">ASCII_data</font>, <font color="green">binary_data</font>, or <font color="green">dBASE_data</font>.)
</p>
<center>
<p>Format Descriptors
</p>
<table border="1">
<tr>
<th> Data </th>
<th> Header </th>
<th> Special
</th></tr>
<tr>
<td>
<table border="1">
<caption>
</caption>
<tr>
<td> <font color="green">XXX_data</font>
</td></tr>
<tr>
<td> <font color="green">XXX_input_data</font>
</td></tr>
<tr>
<td> <font color="green">XXX_output_data</font>
</td></tr></table>
</td>
<td>
<table border="1">
<caption>
</caption>
<tr>
<td> <font color="green">XXX_file_header</font>
</td></tr>
<tr>
<td> <font color="green">XXX_file_header_separate</font>
</td></tr>
<tr>
<td> <font color="green">XXX_record_header</font>
</td></tr>
<tr>
<td> <font color="green">XXX_record_header_separate</font>
</td></tr>
<tr>
<td> <font color="green">XXX_input_file_header</font>
</td></tr>
<tr>
<td> <font color="green">XXX_input_file_header_separate</font>
</td></tr>
<tr>
<td> <font color="green">XXX_input_record_header</font>
</td></tr>
<tr>
<td> <font color="green">XXX_input_record_header_separate</font>
</td></tr>
<tr>
<td> <font color="green">XXX_output_file_header</font>
</td></tr>
<tr>
<td> <font color="green">XXX_output_file_header_separate</font>
</td></tr>
<tr>
<td> <font color="green">XXX_output_record_header</font>
</td></tr>
<tr>
<td> <font color="green">XXX_output_record_header_separate</font>
</td></tr></table>
</td>
<td>
<table>
<tr>
<td><font color="green">RETURN</font>*
</td></tr>
<tr>
<td><font color="green">EOL</font>**
</td></tr></table>
</td></tr>
<tr>
<td colspan="3">* The RETURN descriptor lets FreeForm ND skip
<p>over end-of-line characters in the data. 
</p>
</td></tr>
<tr>
<td colspan="3">** The EOL descriptor is a constant
<p>indicating an end-of-line character should be inserted in a
multi-line record. 
</p>
</td></tr></table>
</center>
<p>For more information about header formats, see (<a href="../index.php/Wiki_Testing/hdrfmts" title="Wiki Testing/hdrfmts">Header Formats</a>).
</p>
<h3><span class="mw-headline" id="Variable_Descriptions"><span class="mw-headline-number">1.4.2</span> Variable Descriptions</span></h3>
<p>A variable description defines the name, start and end column
position, type, and precision for each variable. The fields in a
variable description are separated by white space. Two variable
descriptions are shown below with the fields indicated. Each field is
then described.
</p><p>Here are two example variable descriptions.  Each one consists of a
name, a start position, and end position, a type, and a precision.
</p>
<pre>
latitude    1  10  double  6
longitude  12  22  double  6
</pre>
<blockquote>
<dl>
<dt> Name&#160;</dt>
<dd>
</dd>
</dl>
<p>The variable name is case-sensitive, up to 63 characters long with
no blanks. The variable names in the example are latitude and
longitude. If the same variable is included in more than one format
description within a format description file, its name must be the
same in each format description.
</p>
<dl>
<dt> Start Position&#160;</dt>
<dd>
</dd>
</dl>
<p>The column position where the first character (ASCII) or byte
(binary) of a variable value is placed. The first position is 1, not
0. In the example, the variable latitude is defined to start at
position 1 and longitude at 12.
</p>
<dl>
<dt> End Position&#160;</dt>
<dd>
</dd>
</dl>
<p>The column position where the last character (ASCII) or byte
(binary) of a variable value is placed. In the example, the variable
latitude is defined to end at position 10 and longitude at 22.
</p>
<dl>
<dt> Type&#160;</dt>
<dd>
</dd>
</dl>
<p>The variable type can be a standard type such as char, float,
double, or a special FreeForm ND type. The type for both variables
in the example is double. See above for
descriptions of supported types.
</p>
<dl>
<dt> Precision&#160;</dt>
<dd>
</dd>
</dl>
<p>Precision defines the number of digits to the right of the decimal
point. For float or double variables, precision only controls the
number of digits printed or displayed to the right of the decimal
point in an ASCII representation. The precision for both variables
in the example is 6.
</p>
</blockquote>




</div>
				<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
</body></html>