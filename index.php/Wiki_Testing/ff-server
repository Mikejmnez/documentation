
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Wiki Testing/ff-server - OPeNDAP Documentation</title>
</head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Wiki_Testing_ff-server skin-monobook action-view">
<div id="globalWrapper">
<div id="column-content"><div id="content" class="mw-body-primary" role="main">
	
	
	<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Wiki Testing/ff-server</span></h1>
	<div id="bodyContent" class="mw-body">
		<div id="siteSub">From OPeNDAP Documentation</div>
		<div id="contentSub"></div>
		

		<!-- start content -->
<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p><a href="../index.php/FreeForm" title="FreeForm">return to FreeForm</a>
</p>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#The_OPeNDAP_FreeForm_ND_Data_Handler"><span class="tocnumber">1</span> <span class="toctext">The OPeNDAP FreeForm ND Data Handler</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Differences_between_OPeNDAP_FreeForm_ND_and_the_OPeNDAP_FreeForm_ND_Data_Handler"><span class="tocnumber">1.1</span> <span class="toctext">Differences between OPeNDAP FreeForm ND and the OPeNDAP FreeForm ND Data Handler</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="#Data_Type_Conversions"><span class="tocnumber">1.2</span> <span class="toctext">Data Type Conversions</span></a>
<ul>
<li class="toclevel-3 tocsection-4"><a href="#Conversion_Examples"><span class="tocnumber">1.2.1</span> <span class="toctext">Conversion Examples</span></a>
<ul>
<li class="toclevel-4 tocsection-5"><a href="#Arrays"><span class="tocnumber">1.2.1.1</span> <span class="toctext">Arrays</span></a></li>
<li class="toclevel-4 tocsection-6"><a href="#Collections_of_Variables"><span class="tocnumber">1.2.1.2</span> <span class="toctext">Collections of Variables</span></a></li>
<li class="toclevel-4 tocsection-7"><a href="#Multiple_Arrays"><span class="tocnumber">1.2.1.3</span> <span class="toctext">Multiple Arrays</span></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

<h1><span class="mw-headline" id="The_OPeNDAP_FreeForm_ND_Data_Handler"><span class="mw-headline-number">1</span> The OPeNDAP FreeForm ND Data Handler</span></h1>
<p>The OPeNDAP FreeForm ND Data Handler is a OPeNDAP server add-on that uses OPeNDAP FreeForm ND to convert and serve data
in formats that are not directly supported by existing <a href="../index.php/Hyrax" title="Hyrax">Hyrax</a> data handlers.  Bringing
OPeNDAP FreeForm ND 's data conversion capacity into the OPeNDAP world widens data
access for DAP2 clients, since any format that can be described in
OPeNDAP FreeForm ND can now be served by the OPeNDAP data server.
</p><p>Like all DAP2 servers, the OPeNDAP FreeForm ND Data Handler responds to client requests for data
by returning either data values or information about the data.  It
differs from other DAP2 servers because it invokes OPeNDAP FreeForm ND to read the
data from disk before serving it to the client.
</p><p>The following sequence of steps illustrates how the OPeNDAP FreeForm ND Data Handler works:
</p><p><br />
</p>
<ol>
<li>A DAP2 client sends a request for data to a OPeNDAP FreeForm ND Data Handler .  The request must include the name of the file that contains the data, and may include a constraint expression to sample the data.
</li>
<li>The OPeNDAP FreeForm ND Data Handler looks in its path for two files: a data file with the name sent by the client, and a format definition file to use with the data file.  The format definition file contains a description of the data format, constructed according to the OPeNDAP FreeForm ND syntax. 
</li>
<li>The server uses both files in invoking the OPeNDAP FreeForm ND engine.  The OPeNDAP FreeForm ND engine reads the data file and the format file, using the instructions in the latter to convert the former into data which is then passed back to the OPeNDAP FreeForm ND Data Handler .
</li>
<li>On receiving the converted data, the OPeNDAP FreeForm ND Data Handler converts the data into the DAP2 transmission format.  The conversion may involve some adjustment of data types; these are listed below.  The server also applies any constraint expressions the client sent along with the URL.
</li>
<li>The server then constructs DDS and DAS files based on the format of the converted data.  If the server has access to DDS and DAS files that describe the data, it applies those definition before sending them back to the client.
</li>
<li>Finally, the server sends the DDS, DAS, and converted data back to the client.
</li>
</ol>
<p>For information about how to write a OPeNDAP FreeForm ND data description, refer to
the <a href="../index.php/Wiki_Testing/tblfmt" title="Wiki Testing/tblfmt">Table Format</a> for sequence data and
<a href="../index.php/Wiki_Testing/arrayfmt" title="Wiki Testing/arrayfmt">Array Format</a> for array data.
</p><p>For an introduction to DAP2 and to the OPeNDAP project, please refer
to The Opendap User Guide.
</p>
<h2><span class="mw-headline" id="Differences_between_OPeNDAP_FreeForm_ND_and_the_OPeNDAP_FreeForm_ND_Data_Handler"><span class="mw-headline-number">1.1</span> Differences between OPeNDAP FreeForm ND and the OPeNDAP FreeForm ND Data Handler</span></h2>
<p>The OPeNDAP FreeForm ND Data Handler is based on the same libraries used to make the OPeNDAP FreeForm ND utilities.  However, there are some important differences in the
resulting software:
</p>
<ul>
<li>The OPeNDAP FreeForm ND Data Handler is a OPeNDAP FreeForm ND application that converts data <i>on receiving a client request for that data</i>, and not before.  Data served by the OPeNDAP FreeForm ND Data Handler remains in its original format.
</li>
<li>The OPeNDAP FreeForm ND Data Handler does not produce an output file containing the converted data, but serves it directly over the network to the DAP2 client.  Therefore, the OPeNDAP FreeForm ND Data Handler ignores the output section of the format definition file.
</li>
<li>To sample a data file, you do not write format definitions that cause the OPeNDAP FreeForm ND engine to sample the data file.  Instead, you add a DAP2 "constraint expression" to the URL that the client sends to the OPeNDAP FreeForm ND Data Handler .
</li>
<li>The OPeNDAP FreeForm ND Data Handler performs data conversion on the fly.  Conversion only takes place when the client sends a URL requesting data from the OPeNDAP FreeForm ND Data Handler .
</li>
<li>Unlike OPeNDAP FreeForm ND , there is no static file created by the conversion.
</li>
</ul>
<p>(If you wish to create or work with such a file, use the OPeNDAP FreeForm ND
utilities, such as <font color="green">newform</font>.)
</p>
<h2><span class="mw-headline" id="Data_Type_Conversions"><span class="mw-headline-number">1.2</span> Data Type Conversions</span></h2>
<p>The OPeNDAP FreeForm ND Data Handler performs data conversions, based on the data it receives
from the OPeNDAP FreeForm ND engine.  Note that OPeNDAP does not recommend the use of
<font color="green">int64</font> and <font color="green">uint64</font> in the format definition file.
</p><p><br /> 
</p>
<center>
<p>DAP2 Data Type Conversions
</p>
<table border="1">
<tr>
<th> <b>OPeNDAP FreeForm ND</b>   </th>
<th>  <b>DAP2</b>
</th></tr>
<tr>
<td> <font color="green">text</font> </td>
<td> <font color="green">String</font>
</td></tr>
<tr>
<td> <font color="green">int8</font>, <font color="green">uint8</font> </td>
<td> <font color="green">Byte</font>
</td></tr>
<tr>
<td> <font color="green">int16</font> </td>
<td> <font color="green">Int16</font>
</td></tr>
<tr>
<td> <font color="green">int32</font>, <font color="green">int64</font> </td>
<td> <font color="green">Int32</font>
</td></tr>
<tr>
<td> <font color="green">uint16</font> </td>
<td> <font color="green">UInt16</font>
</td></tr>
<tr>
<td> <font color="green">uint32</font>, <font color="green">uint64</font> </td>
<td> <font color="green">UInt32</font>
</td></tr>
<tr>
<td> <font color="green">float32</font> </td>
<td> <font color="green">Float32</font>
</td></tr>
<tr>
<td> <font color="green">float64</font>, <font color="green">enote</font> </td>
<td> <font color="green">Float64</font>
</td></tr></table>
</center>
<h3><span class="mw-headline" id="Conversion_Examples"><span class="mw-headline-number">1.2.1</span> Conversion Examples</span></h3>
<p>The examples show how the OPeNDAP FreeForm ND Data Handler treats data
received from the OPeNDAP FreeForm ND engine.  Please see the OPeNDAP
FreeForm ND Data Handler distribution for more test data and format
definition files, and the (<a href="../index.php/Wiki_Testing/tblfmt" title="Wiki Testing/tblfmt">Table Format</a>) for
more information on writing format definitions.
</p><p><br />
</p>
<h4><span class="mw-headline" id="Arrays"><span class="mw-headline-number">1.2.1.1</span> Arrays</span></h4>
<p>If you define a variable as an array in the OPeNDAP FreeForm ND format definition
file, the OPeNDAP FreeForm ND Data Handler produces an array of variables with matching types.
</p><p>For exmple, this entry in the format definition file:
</p>
<pre>
binary_input_data &quot;array&quot;
fvar1 1 4 ARRAY[&quot;records&quot; 1 to 101] of int32 0
</pre>
<p>in converted by the OPeNDAP FreeForm ND Data Handler to:
</p>
<pre>
Int32 fvar1[records = 101]
</pre>
<p><br />
</p>
<h4><span class="mw-headline" id="Collections_of_Variables"><span class="mw-headline-number">1.2.1.2</span> Collections of Variables</span></h4>
<p>If you define several variables in the format definition file, the
OPeNDAP FreeForm ND Data Handler produces a Sequence of variables with matching types.
</p><p>For example, this entry in the format definition file:
</p>
<pre>
ASCII_input_data &quot;ASCII_data&quot;
fvar1   1 10  int32 2
svar1  13 18  int16 0
usvar1 21 26 uint16 1
lvar1  29 39  int32 0
ulvar1 42 52 uint32 4
</pre>
<p>is converted by the OPeNDAP FreeForm ND Data Handler to:
</p>
<pre>
Sequence {
Int32 fvar1;
Int32 svar1;

...
} ASCII_data;
</pre>
<p><br />
</p>
<h4><span class="mw-headline" id="Multiple_Arrays"><span class="mw-headline-number">1.2.1.3</span> Multiple Arrays</span></h4>
<p>If you define a collection of arrays in the format definition file, as
you would expect, the OPeNDAP FreeForm ND Data Handler produces a dataset containing multiple
arrays.
</p><p>For example, this entry in the format definition file:
</p>
<pre>
binary_input_data &quot;arrays&quot;
fvar1 1 4 ARRAY[&quot;records&quot; 1 to 101] of int32 0
fvar2 1 4 ARRAY[&quot;records&quot; 1 to 101] of int32 0
</pre>
<p>is converted by the OPeNDAP FreeForm ND Data Handler to:
</p>
<pre>
Dataset {
Int32 fvar1[records=101]
Int32 fvar2[records=101]
};
</pre>




</div>
				<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
</body></html>