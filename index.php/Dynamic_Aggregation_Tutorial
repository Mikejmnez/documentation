
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Dynamic Aggregation Tutorial - OPeNDAP Documentation</title>
</head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Dynamic_Aggregation_Tutorial skin-monobook action-view">
<div id="globalWrapper">
<div id="column-content"><div id="content" class="mw-body-primary" role="main">
	
	
	<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Dynamic Aggregation Tutorial</span></h1>
	<div id="bodyContent" class="mw-body">
		<div id="siteSub">From OPeNDAP Documentation</div>
		<div id="contentSub"></div>
		

		<!-- start content -->
<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Location_.28Location_Location....29"><span class="tocnumber">2</span> <span class="toctext">Location (Location Location...)</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Suffix_Criterion"><span class="tocnumber">3</span> <span class="toctext">Suffix Criterion</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Subdirectory_Searching_.28The_Default.21.29"><span class="tocnumber">4</span> <span class="toctext">Subdirectory Searching (The Default!)</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#OlderThan_Criterion"><span class="tocnumber">5</span> <span class="toctext">OlderThan Criterion</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#Regular_Expression_Criterion"><span class="tocnumber">6</span> <span class="toctext">Regular Expression Criterion</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="#Matching_a_Subdirectory_Name"><span class="tocnumber">6.1</span> <span class="toctext">Matching a Subdirectory Name</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Matching_a_partial_filename"><span class="tocnumber">6.2</span> <span class="toctext">Matching a partial filename</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="#Date_Format_Mark_and_Timestamp_Extraction"><span class="tocnumber">7</span> <span class="toctext">Date Format Mark and Timestamp Extraction</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#Order_of_Inclusion"><span class="tocnumber">8</span> <span class="toctext">Order of Inclusion</span></a></li>
</ul>
</div>

<h3><span class="mw-headline" id="Overview"><span class="mw-headline-number">1</span> Overview</span></h3>
<p>Dynamic aggregation is achieved through the use of the <i>scan</i> element. 
</p><p>The NcML-2.2 <i>scan</i> element schema:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="xml source-xml"><pre class="de1"><span class="sc3"><span class="re1">&lt;xsd:element</span> <span class="re0">name</span>=<span class="st0">&quot;scan&quot;</span> <span class="re0">minOccurs</span>=<span class="st0">&quot;0&quot;</span> <span class="re0">maxOccurs</span>=<span class="st0">&quot;unbounded&quot;</span><span class="re2">&gt;</span></span>
  <span class="sc3"><span class="re1">&lt;xsd:complexType<span class="re2">&gt;</span></span></span>
    <span class="sc3"><span class="re1">&lt;xsd:attribute</span> <span class="re0">name</span>=<span class="st0">&quot;location&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;xsd:string&quot;</span> <span class="re0">use</span>=<span class="st0">&quot;required&quot;</span><span class="re2">/&gt;</span></span>
    <span class="sc3"><span class="re1">&lt;xsd:attribute</span> <span class="re0">name</span>=<span class="st0">&quot;regExp&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;xsd:string&quot;</span> <span class="re2">/&gt;</span></span>
    <span class="sc3"><span class="re1">&lt;xsd:attribute</span> <span class="re0">name</span>=<span class="st0">&quot;suffix&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;xsd:string&quot;</span> <span class="re2">/&gt;</span></span>
    <span class="sc3"><span class="re1">&lt;xsd:attribute</span> <span class="re0">name</span>=<span class="st0">&quot;subdirs&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;xsd:boolean&quot;</span> <span class="re0">default</span>=<span class="st0">&quot;true&quot;</span><span class="re2">/&gt;</span></span>
    <span class="sc3"><span class="re1">&lt;xsd:attribute</span> <span class="re0">name</span>=<span class="st0">&quot;olderThan&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;xsd:string&quot;</span> <span class="re2">/&gt;</span></span>
    <span class="sc3"><span class="re1">&lt;xsd:attribute</span> <span class="re0">name</span>=<span class="st0">&quot;dateFormatMark&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;xsd:string&quot;</span> <span class="re2">/&gt;</span></span>
    <span class="sc3"><span class="re1">&lt;xsd:attribute</span> <span class="re0">name</span>=<span class="st0">&quot;enhance&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;xsd:string&quot;</span><span class="re2">/&gt;</span></span>
  <span class="sc3"><span class="re1">&lt;/xsd:complexType<span class="re2">&gt;</span></span></span>
<span class="sc3"><span class="re1">&lt;/xsd:element<span class="re2">&gt;</span></span></span></pre></div></div>
<p>This page discusses the use and significance of <i>scan</i> in creating dynamically aggregated datasets.
</p>
<h3><span class="mw-headline" id="Location_.28Location_Location....29"><span class="mw-headline-number">2</span> Location (Location Location...)</span></h3>
<p>The most important attribute of the scan element is the <i>scan@location</i> element that specifies the top-level search directory for the scan, relative to the BES data root directory specified in the BES configuration.  
</p><p><b>IMPORTANT</b>:  <i>ALL</i> locations are interpreted relative to the BES root directory and <b>NOT</b> relative to the location of the NcML file itself!  This means that all data to be aggregated <b>must</b> be in a subdirectory of the BES root data directory and that these directories <i>must</i> be specified fully, not relative to the NcML file.  
</p><p>For example, if the BES root data dir is "/usr/local/share/hyrax", let ${BES_DATA_ROOT} refer to this location.  If the NcML aggregation file is in "${BES_DATA_ROOT}/data/ncml/myAgg.ncml" and the aggregation member datasets are in "${BES_DATA_ROOT}/data/hdf4/myAggDatasets", then the location in the NcML file for the aggregation data directory would be:
</p>
<pre>&lt;scan <b>location="data/hdf4/myAggDatasets"</b> /&gt;
</pre>
<p>which specifies the data directory relative to the BES data root as required.
</p><p>Again, due to security reasons, the data is always searched under the BES data root.  Trying to specify an absolute filesystem path, such as:
</p>
<pre>&lt;scan <b>location="/usr/local/share/data"</b> /&gt;
</pre>
<p>will <i>NOT</i> work.  This directory will also be assumed to be a subdirectory of the ${BES_DATA_ROOT}, regardless of the preceding "/" character.
</p>
<h3><span class="mw-headline" id="Suffix_Criterion"><span class="mw-headline-number">3</span> Suffix Criterion</span></h3>
<p>The simplest criterion is to match only files of a certain datatype in a given directory.  This is useful for filtering out text files and other files that may exist in the directory but which do not form part of the aggregation data.
</p><p>Here's a simple example:
</p>
<pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;netcdf title="Example of joinNew Grid aggregation using the scan element."&gt;
 
 &lt;aggregation type="joinNew" dimName="filename"&gt;
   &lt;variableAgg name="dsp_band_1"/&gt; 
   &lt;scan location="data/ncml/agg/grids" <b>suffix=".hdf"</b> /&gt;
 &lt;/aggregation&gt; 
 
&lt;/netcdf&gt;
</pre>
<p>Assuming that the specified location "data/ncml/agg/grids" contains no subdirectories, this NcML will return all files in that directory that end in ".hdf" in alphanumerical order.  In the case of our installed example data, there are four HDF4 files in that directory:
</p>
<pre>
data/ncml/agg/grids/f97182070958.hdf
data/ncml/agg/grids/f97182183448.hdf
data/ncml/agg/grids/f97183065853.hdf
data/ncml/agg/grids/f97183182355.hdf 
</pre>
<p>These will be included in alphanumerical order, so the scan element will in effect be equivalent to the following list of &lt;netcdf&gt; elements:
</p>
<pre>
&lt;netcdf location=&quot;data/ncml/agg/grids/f97182070958.hdf&quot;/&gt; 
&lt;netcdf location=&quot;data/ncml/agg/grids/f97182183448.hdf&quot;/&gt; 
&lt;netcdf location=&quot;data/ncml/agg/grids/f97183065853.hdf&quot;/&gt;  
&lt;netcdf location=&quot;data/ncml/agg/grids/f97183182355.hdf&quot;/&gt; 
</pre>
<p>By default, scan will search subdirectories, which is why we mentioned "grids has no subdirectories".  We discuss this in the next section.
</p>
<h3><span class="mw-headline" id="Subdirectory_Searching_.28The_Default.21.29"><span class="mw-headline-number">4</span> Subdirectory Searching (The Default!)</span></h3>
<p>If the author specifies the <i>scan@subdirs</i> attribute to the value "true" (which is the default!), then the criteria will be applied recursively to any subdirectories of the <i>scan@location</i> base scan directory as well as to any regular files in the base directory.  
</p><p>For example, continuing our previous example, but giving a higher level location:
</p><p><br />
</p>
<pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;netcdf title="joinNew Grid aggregation using the scan element."&gt;
  
 &lt;aggregation type="joinNew" dimName="filename"&gt;
   &lt;variableAgg name="dsp_band_1"/&gt; 
   &lt;scan location="data/ncml/agg/" suffix=".hdf" <b>subdirs="true"</b>/&gt;
 &lt;/aggregation&gt; 
 
&lt;/netcdf&gt;
</pre>
<p><br />
Assuming that only the "grids" subdir of "/data/ncml/agg" contains HDF4 files with that extension, the same aggregation as prior will be created, i.e. an aggregation isomorphic to:
</p>
<pre>
&lt;netcdf location=&quot;data/ncml/agg/grids/f97182070958.hdf&quot;/&gt; 
&lt;netcdf location=&quot;data/ncml/agg/grids/f97182183448.hdf&quot;/&gt; 
&lt;netcdf location=&quot;data/ncml/agg/grids/f97183065853.hdf&quot;/&gt;  
&lt;netcdf location=&quot;data/ncml/agg/grids/f97183182355.hdf&quot;/&gt; 
</pre>
<p>The <i>scan@subdirs</i> attribute is much for useful for turning off the default recursion.  For example, if recursion is <b>NOT</b> desired, but only files with the given suffix in the given directory are required, the following will do that:
</p>
<pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;netcdf title="joinNew Grid aggregation using the scan element."&gt;
 
 &lt;aggregation type="joinNew" dimName="filename"&gt;
   &lt;variableAgg name="dsp_band_1"/&gt; 
   &lt;scan location="data/ncml/agg/grids" suffix=".hdf" <b>subdirs="false"</b>/&gt;
 &lt;/aggregation&gt; 
&lt;/pre&gt;
</pre>
<h3><span class="mw-headline" id="OlderThan_Criterion"><span class="mw-headline-number">5</span> OlderThan Criterion</span></h3>
<p>The <i>scan@olderThan</i> attribute can be used to filter out files that are "too new".  This feature is useful for excluding partial files currently being written by a daemon process, for example.  
</p><p>The value of the attribute is a duration specified by a number followed by a basic time unit.  The time units recognized are:
</p>
<ul>
<li> <b>seconds</b>: { s, sec, secs, second, seconds }
</li>
<li> <b>minutes</b>: { m, min, mins, minute, minutes }
</li>
<li> <b>hours</b>: { h, hour, hours }
</li>
<li> <b>days</b>: { day, days }
</li>
<li> <b>months</b>: { month, months }
</li>
<li> <b>years</b>: { year, years }
</li>
</ul>
<p>The strings inside { } are all recognized as referring to the given time unit.  
</p><p>For example, if we are following our previous example, but we suspect a new HDF file may be written at any time and usually takes 5 minutes to do so, we might use the following NcML:
</p>
<pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;netcdf title="joinNew Grid aggregation using the scan element."&gt;
 
 &lt;aggregation type="joinNew" dimName="filename"&gt;
   &lt;variableAgg name="dsp_band_1"/&gt; 
   &lt;scan location="data/ncml/agg/grids" suffix=".hdf" subdirs="false" <b>olderThan="10 mins"</b> /&gt;
 &lt;/aggregation&gt;

&lt;/netcdf&gt;
</pre>
<p><br />
Assuming the file will always be written withing 10 minutes, this files does what we wish.  Only files whose modification date is older than the given duration from the current system time are included.   
</p><p><b>NOTE</b> that the modification date of the file, not the creation date, is used for the test.
</p>
<h3><span class="mw-headline" id="Regular_Expression_Criterion"><span class="mw-headline-number">6</span> Regular Expression Criterion</span></h3>
<p>The <i>scan@regExp</i> attribute may be used for more complicated filename matching tests where data for multiple variables, for example, may live in the same directory by whose filenames can be used to distinguish which are desired in the aggregation.  Additionally, since the pathname including the location is used for the test, a regular expression test may be used in conjunction with a recursive directory search to find files in subdirectories where the directory name itself is specified in the regular expression, not just the filename.  We'll give examples of both of these cases.  
</p><p>We also reiterate that this test is used <i>in conjunction</i> with any other tests --- the author may also include a suffix and an olderThan test if they wish.  All criteria must match for the file to be included in the aggregation.
</p><p>We recognize the POSIX regular expression syntax.  For more information on regular expressions and the POSIX syntax, please see: <a rel="nofollow" class="external free" href="http://en.wikipedia.org/wiki/Regular_expression">http://en.wikipedia.org/wiki/Regular_expression</a>.
</p><p>We will give two basic examples: 
</p>
<ul>
<li> Finding all subdirectories with a given name
</li>
<li> Matching a filename starting with a certain substring
</li>
</ul>
<p><br />
</p>
<h4><span class="mw-headline" id="Matching_a_Subdirectory_Name"><span class="mw-headline-number">6.1</span> Matching a Subdirectory Name</span></h4>
<p>Here's an example where we use a subdirectory search to find ".hdf" files in all subdirectories named "grids":
</p>
<pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;netcdf title="Example of joinNew Grid aggregation using the scan element with a regexp"&gt;
 
 &lt;aggregation type="joinNew" dimName="filename"&gt;
   &lt;variableAgg name="dsp_band_1"/&gt; 
   &lt;scan 
      location="data/" 
      subdirs="true" 
      <b>regExp="^.*/grids/.+\.hdf$"</b>
      /&gt;
 &lt;/aggregation&gt; 
&lt;/netcdf&gt;
</pre>
<p>The regular expression here is "^.*/grids/.+\/hdf".  Let's pull it apart quickly (this is not intended to be a regular expression tutorial):
</p><p>The "^" matching the beginning of the string, so starts at the beginning of the location pathname.   (without this we can match substrings in the middle of strings, etc)
</p><p>We then match ".*" meaning 0 or more of any character.
</p><p>We then match the "/grids/" string explicitly, meaning we want all pathnames that contain "/grids/" as a subdirectory.  
</p><p>We then match ".+" meaning 1 or more of any character.
</p><p>We then match "\." meaning a literal "." character (the backslash "escapes" it).
</p><p>We then match the suffix "hdf".
</p><p>Finally, we match "$" meaning the end of the string.
</p><p>So ultimately, this regular expression finds all filenames ending in ".hdf" that exist in some subdirectory named "grids" of the top-level location.
</p><p>In following with our previous example, if there was only the one "grids" subdirectory in the ${BES_DATA_ROOT} with our four familiar files, we'd get the same aggregation as before.
</p>
<h4><span class="mw-headline" id="Matching_a_partial_filename"><span class="mw-headline-number">6.2</span> Matching a partial filename</span></h4>
<p>Let's say we have a given directory full of data files whose filename prefix specifies which variable they refer to.  For example, let's say our "grids" directory has files that start with "grad" as well as the files that start with "f" we have seen in our examples.  We still want just the files starting with "f" to filter out the others.  Here's an example for that:
</p>
<pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;netcdf title="Example of joinNew Grid aggregation using the scan element with a regexp"&gt;
 
 &lt;aggregation type="joinNew" dimName="filename"&gt;
   &lt;variableAgg name="dsp_band_1"/&gt; 
   &lt;scan 
      location="data/" 
      subdirs="true" 
      <b>regExp="^.*/grids/f.+\.hdf$"</b>
      /&gt;
 &lt;/aggregation&gt; 
&lt;/netcdf&gt;
</pre>
<p>Here we match all pathnames ending in "grids" and files that start with the letter "f" and end with ".hdf" as we desire.
</p>
<h3><span class="mw-headline" id="Date_Format_Mark_and_Timestamp_Extraction"><span class="mw-headline-number">7</span> Date Format Mark and Timestamp Extraction</span></h3>
<p>This section shows how to use the <i>scan@dateFormatMark</i> attribute along with other search criteria in order to extract and sort datasets by a timestamp encoded in the filename.  All that is required is that the timestamp be parseable by a pattern recognized by the Java language "SimpleDateFormat" class (<a rel="nofollow" class="external text" href="http://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html">java.text.SimpleDateFormat</a>), which has also been implemented in C++ in the <a rel="nofollow" class="external text" href="http://site.icu-project.org/">International Components for Unicode</a> library which we use.
</p><p>We base this example from the Unidata site <a rel="nofollow" class="external text" href="http://www.unidata.ucar.edu/software/netcdf/ncml/v2.2/Aggregation.html">Aggregation Tutorial</a>.  Here we have a directory with four files whose filenames contain a timestamp describable by a SimpleDataFormat (SDF) pattern.  We will also use a regular expression criterion and suffix criterion in addition to the dateFormatMark since we have other files in the same directory and only wish to match those starting with the characters "CG" that have suffix ".nc".  
</p><p>Here's the list of files (relative to the BES data root dir):
</p>
<pre>
data/ncml/agg/dated/CG2006158_120000h_usfc.nc
data/ncml/agg/dated/CG2006158_130000h_usfc.nc
data/ncml/agg/dated/CG2006158_140000h_usfc.nc
data/ncml/agg/dated/CG2006158_150000h_usfc.nc
</pre>
<p>Here's the NcML:
</p>
<pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;netcdf title="Test of joinNew aggregation using the scan element and dateFormatMark"&gt;
  
 &lt;aggregation type="joinNew" dimName="fileTime"&gt;
   &lt;variableAgg name="CGusfc"/&gt;  
   &lt;scan 
       location="data/ncml/agg/dated" 
       suffix=".nc" 
       subdirs="false"
       regExp="^.*/CG[^/]*"
       <b>dateFormatMark="CG#yyyyDDD_HHmmss"</b>
   /&gt;
 &lt;/aggregation&gt; 

&lt;/netcdf&gt;

</pre>
<p>So here we joinNew on the new outer dimension <i>fileTime</i>.  The new coordinate variable <b>fileTime</b>[<i>fileTime</i>] for this dimension will be an Array of type String that will contain the parsed <a rel="nofollow" class="external text" href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> timestamps we will extract from the matching filenames.  
</p><p>We have specified that we want only Netcdf files (suffix ".nc") which match the regular expression "^.*/CG[^/]*".  This means match the start of the string, then any number of characters that end with a "/" (the path portion of the filename), then the letters "CG", then some number of characters that do <i>not</i> include the "/" character (which is what "[^/]*" means).  Essentially, we want files whose basename (path stripped) start with "CG" and end with ".nc".   We also do not want to recurse, but only look in the location directory "/data/ncml/agg/dated" for the files.
</p><p>Finally, we specify the <i>scan@dateFormatMark</i> pattern to describe how to parse the filename into an ISO 8601 date.  The <i>dateFormatMark</i> is processed as follows:
</p>
<ul>
<li> Skip the <i>number</i> of characters prior to the "#" mark in the pattern while scanning the base filename (no path)
</li>
<li> Interpret the next characters of the file basename using the given SimpleDateFormat string
</li>
<li> Ignore any characters after the SDF portion of the filename (such as the suffix)
</li>
</ul>
<p>First, note that we <b>do not match</b> the characters in the dateFormatMark --- they are simply counted and skipped.  So rather than "CG#" specifying the prefix before the SDF, we could have also used "XX#".  This is why we must also use a regular expression to filter out files with other prefixes that we do not want in the aggregation.  Note that the "#" is just a marker for the start of the SDF pattern and doesn't count as an actual character in the matching process.
</p><p>Second, we specify the dateFormatMark (DFM) as the following SDF pattern: "yyyyDDD_HHmmss".  This means that we use the four digit year, then the day of the year (a three digit number), then an underscore ("_") separator, then the 24 hour time as 6 digits.  Let's take the basename of the first file as an example:
</p><p>"CG2006158_120000h_usfc.nc"
</p><p>We skip two characters due to the "CG#" in the DFM.  Then we want to match the "yyyy" pattern for the year with: "2006".
</p><p>We then match the day of the year as "DDD" which is "158", the 158th day of the year for 2006.
</p><p>We then match the underscore character "_" which is only a separator.
</p><p>Next, we match the 24 hour time "HHmmss" as 12:00:00 hours:mins:secs (i.e. noon).
</p><p>Finally, any characters after the DFM are ignored, here "h_usfc.nc".  
</p><p>We see that the four dataset files are on the same day, but sampled each hour from noon to 3 pm.
</p><p>These parsed timestamps are then converted to an ISO 8601 date string which is used as the value for the coordinate variable element corresponding to that aggregation member.  The first file would thus have the time value "2006-06-07T12:00:00Z", which is 7 June 2006 at noon in the GMT timezone.  
</p><p>The matched files are then <b>sorted using the ISO 8601 timestamp as the sort key</b> and added to the aggregation in this order.  Since ISO 8601 is designed such that lexicographic order is isomorphic to chronological order, this orders the datasets monotonically in time from past to future.  This is different from the &lt;scan&gt; behavior <i>without</i> a dateFormatMark specified, where files are ordered lexicographically (alphanumerically by full pathname) --- this order may or may not match chronological order.  
</p><p>If we project out the ASCII dods response for the new coordinate variable, we see all of the parsed timestamps and that they are in chronological order:
</p>
<pre>
String fileTime[fileTime = 4] = {&quot;2006-06-07T12:00:00Z&quot;, 
&quot;2006-06-07T13:00:00Z&quot;,
 &quot;2006-06-07T14:00:00Z&quot;, 
&quot;2006-06-07T15:00:00Z&quot;};
</pre>
<p>We also check the resulting DDS to see that it is added as a map vector to the Grid as well:
</p>
<pre>
Dataset {
    Grid {
      Array:
        Float32 CGusfc[fileTime = 4][time = 1][altitude = 1][lat = 29][lon = 26]
;
      Maps:
        String fileTime[fileTime = 4];
        Float64 time[time = 1];
        Float32 altitude[altitude = 1];
        Float32 lat[lat = 29];
        Float32 lon[lon = 26];
    } CGusfc;
    String fileTime[fileTime = 4];
} joinNew_scan_dfm.ncml;
</pre>
<p>Finally, we look at the DAS with global metadata removed:
</p>
<pre>
Attributes {
  CGusfc {
        Float32 _FillValue -1.000000033e+32;
        Float32 missing_value -1.000000033e+32;
        Int32 numberOfObservations 303;
        Float32 actual_range -0.2876400054, 0.2763200104;
        fileTime {
---&gt;            String _CoordinateAxisType &quot;Time&quot;;
        }
        CGusfc {
        }
        time {
            String long_name &quot;End Time&quot;;
            String standard_name &quot;time&quot;;
            String units &quot;seconds since 1970-01-01T00:00:00Z&quot;;
            Float64 actual_range 1149681600.0000000, 1149681600.0000000;
        }
        altitude {
            String long_name &quot;Altitude&quot;;
            String standard_name &quot;altitude&quot;;
            String units &quot;m&quot;;
            Float32 actual_range 0.000000000, 0.000000000;
        }
        lat {
            String long_name &quot;Latitude&quot;;
            String standard_name &quot;latitude&quot;;
            String units &quot;degrees_north&quot;;
            String point_spacing &quot;even&quot;;
            Float32 actual_range 37.26869965, 38.02470016;
            String coordsys &quot;geographic&quot;;
        }
        lon {
            String long_name &quot;Longitude&quot;;
            String standard_name &quot;longitude&quot;;
            String units &quot;degrees_east&quot;;
            String point_spacing &quot;even&quot;;
            Float32 actual_range 236.5800018, 237.4799957;
            String coordsys &quot;geographic&quot;;
        }
    }
    fileTime {
---&gt;     String _CoordinateAxisType &quot;Time&quot;;
    }
}
</pre>
<p>We see that the aggregation has also automatically added the "_CoordinateAxisType" attribute and set it to "Time" (denoted by the "--&gt;") as defined by the NcML 2.2 specification.  The author may add other metadata to the new coordinate variable as discussed previously.
</p>
<h3><span class="mw-headline" id="Order_of_Inclusion"><span class="mw-headline-number">8</span> Order of Inclusion</span></h3>
<p>In cases where a dateFormatMark is <i>not</i> specified, the member datasets are added to the aggregation in alphabetical order <i>on the full pathname</i>.  This is important in the case of subdirectories since the path of the subdirectory is taken into account in the sort.
</p><p>In cases where a dateFormatMark <i>is</i> specified, the extracted ISO 8601 timestamp is used as the sorting criterion, with older files being added before newer files.
</p>



</div>
				<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
</body></html>