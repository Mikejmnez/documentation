
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>UserGuideIntroduction - OPeNDAP Documentation</title>
</head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-UserGuideIntroduction skin-monobook action-view">
<div id="globalWrapper">
<div id="column-content"><div id="content" class="mw-body-primary" role="main">
	
	
	<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">UserGuideIntroduction</span></h1>
	<div id="bodyContent" class="mw-body">
		<div id="siteSub">From OPeNDAP Documentation</div>
		<div id="contentSub"></div>
		

		<!-- start content -->
<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p><a href="../index.php/UserGuide" title="UserGuide">Return to top level</a>
</p>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#What_is_OPeNDAP.3F"><span class="tocnumber">1</span> <span class="toctext">What is OPeNDAP?</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#The_OPeNDAP_Client"><span class="tocnumber">2</span> <span class="toctext">The OPeNDAP Client</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#The_OPeNDAP_Services"><span class="tocnumber">3</span> <span class="toctext">The OPeNDAP Services</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#The_OPeNDAP_Server"><span class="tocnumber">4</span> <span class="toctext">The OPeNDAP Server</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Administration_and_Centralization_of_Data"><span class="tocnumber">5</span> <span class="toctext">Administration and Centralization of Data</span></a></li>
</ul>
</div>

<h1><span class="mw-headline" id="What_is_OPeNDAP.3F"><span class="mw-headline-number">1</span> What is OPeNDAP?</span></h1>
<p>OPeNDAP provides a way for researchers to
access scientific data anywhere on the Internet from a wide variety of new
<i>and existing</i>  programs. 
</p><p>The OPeNDAP architecture uses a client/server model, with a <i>client</i>
that sends requests for data out onto the network to some <i>server</i>,
that answers with the requested data. This is exactly the model used
by the <a rel="nofollow" class="external text" href="http://www.w3.org/hypertext/WWW/TheProject.html">World
Wide Web</a> where client browsers submit requests
to web servers for the data that make up web pages. Of course, OPeNDAP
clients can do much more than browse this data.  Using flexible data
types suitable for many uses, including scientific data, the OPeNDAP
servers deliver real data directly to the client program in the format
needed by that client.
</p><p>OPeNDAP clients are very specialized browsers, constructed by linking
legacy data analysis programs with OPeNDAP-enabled versions of the
data access APIs they use, or by modifying the programs to use one of
the OPeNDAP data access APIs.  In addition to providing a
sophisticated set of network-compatible APIs in several languages,
there are also libraries of legacy APIs available in OPeNDAP-aware
versions.  The popular
<a rel="nofollow" class="external text" href="http://www.unidata.ucar.edu/packages/netcdf/guide.txn_toc.html"><cite>NetCDF</cite></a> library, for example, can read data from remote
OPeNDAP data sources as easily as it reads from a local file.
</p><p>To expand the universe of data available to a user, OPeNDAP incorporates
a powerful data translation facility, so that data may be stored in
data structures and formats defined by the data provider, but 
accessed by the user in a manner identical to the access of local data
files on the user's own system. Though there are limitations on the
types of data that may be translated (see
<a href="../index.php/UserGuideDataModel#Translation" title="UserGuideDataModel">Translation</a>), 
the facility is flexible and general enough to handle many of the
possible translations.  There are two important results:
</p>
<ul>
<li>A user may not need to know that data from one set are stored in a format different from data in another set. Further, it may be possible that <i>neither</i> data set is stored in a format readable by the original version of the data analysis and display program he or she uses. 
</li>
</ul>
<ul>
<li>No segment of OPeNDAP users will be effectively cut off from accessing data because of its storage format. A scientist who wishes to make his or her data available to other OPeNDAP users may do so while keeping that data in what may actually be a highly idiosyncratic storage format. (Of course, it doesn't <i>have</i> to be in a highly idiosyncratic format.)
</li>
</ul>
<p>The combination of the OPeNDAP network communication model and the data
translation facility make OPeNDAP a powerful tool for the retrieval,
sampling, and display of large distributed datasets. Though OPeNDAP was
developed by oceanographers, its application is not limited to
oceanographic data. The organizing principles and algorithms may be
applied to many other fields.
</p><p>The uniformity with which data appears that makes the system so useful
for data analysis also eases automating data transport and
manipulation tasks.  For example, NOAA's
<a rel="nofollow" class="external text" href="http://ferret.pmel.noaa.gov/Ferret/LAS/home/">Live Access Server
(LAS)</a> (see, for example, <a rel="nofollow" class="external free" href="http://mynasadata.larc.nasa.gov/data.html">http://mynasadata.larc.nasa.gov/data.html</a>) uses OPeNDAP, as do many of the real-time observing
systems that make up the <a rel="nofollow" class="external text" href="http://www.ioos.gov">Integrated Ocean
Observing System (IOOS)</a>, like the <a rel="nofollow" class="external text" href="http://gomoos.org">Gulf of Maine Ocean
Observing System (GoMOOS)</a>.
</p><p><br />
The population of people who may be interested in a system such as
OPeNDAP may be divided into data consumers and data providers. Though it
was an important observation to the development of OPeNDAP that the two
roles are often assumed by the same scientists, the division is a
useful one for the introduction of the system. The following two
sections provide a broad introduction to the roles of data consumer
and data provider. The remainder of this guide is organized around
this distinction between classes of users.
</p>
<h1><span class="mw-headline" id="The_OPeNDAP_Client"><span class="mw-headline-number">2</span> The OPeNDAP Client</span></h1>
<p>OPeNDAP uses a client/server model. The OPeNDAP
servers are web servers equipped to interpret an OPeNDAP URL sent to
them.  An OPeNDAP client composes and sends messages to those
servers.  There are standalone OPeNDAP clients, but most clients are
constructed from data analysis programs modified to get their data
remotely, from the internet, rather than locally, from a file.
</p><p>Without OPeNDAP, an application program that uses one of the common
data access APIs such as netCDF will operate as shown in
<a href="../index.php/File:Unlinked.gif" title="File:Unlinked.gif"> the figure below</a>.  The user makes a request
for data from the application program.  This program uses some data
access API to read and write data.  The program uses procedures
defined by that API to access the data, which is typically stored on
the same host machine.  Some APIs are somewhat more sophisticated than
this, of course, but their general operation is as simple.
</p>
<center>
<p><a href="../index.php/File:Unlinked.png" class="image" title="actual size"><img alt="actual size" src="../images/7/76/Unlinked.png" width="186" height="387" /></a>
</p><p>The Architecture of a Data Analysis Package 
</p>
</center>
<p>The operation of an OPeNDAP client is illustrated in the <a href="../index.php/File:Unlinked.gif" title="File:Unlinked.gif"> figure below</a>.
Here, the
<i>same application program</i>  that was used in <a href="../index.php/File:Unlinked.gif" title="File:Unlinked.gif">
the figure above</a>
has been modified to use one of the OPeNDAP API libraries.  Now, in addition to being
able to use local data as before, the application program is able to access
data from OPeNDAP servers anywhere on the Internet in the same manner as the
local data.
</p><p>To make some analysis program into an OPeNDAP client, just re-link it with
the OPeNDAP API library.  (Or, if your program uses one of the supported legacy API libraries, like netCDF, you can link with the OPeNDAP version of that library.)  This will
create a program that accepts URLs as well as file pathnames to
identify data to be read.  (See
<a href="../index.php/UserGuideClient" title="UserGuideClient">the OPeNDAP Client</a>).
</p>
<center>
<p><a href="../index.php/File:Linked.png" class="image" title="actual size"><img alt="actual size" src="../images/8/87/Linked.png" width="342" height="528" /></a>
</p><p>The Architecture of a Data Analysis Package Using OPeNDAP
</p>
</center>
<p><br />
OPeNDAP also provides a data translation facility. Data from the original
data file is translated by the OPeNDAP server into the OPeNDAP data model for
transmission to the client. Upon receiving the data, the client
translates the data into the <a href="../index.php/UserGuideDataModel" title="UserGuideDataModel"> data model</a> it
understands. 
Because the data transmitted from an OPeNDAP server to the client travel
in the OPeNDAP format, the dataset's original storage format is completely
irrelevant to the client. If the client was originally
designed to read netCDF format files, the data returned by the
OPeNDAP-netCDF library will appear to have been read from a netCDF file,
whatever the actual format of the files from which the data were
read(<a href="../index.php?title=Wiki_Testing/OPeNDAPUserGuideFootNotes&amp;action=edit&amp;redlink=1" class="new" title="Wiki Testing/OPeNDAPUserGuideFootNotes (page does not exist)">4</a>). If the
program expects JGOFS data, the OPeNDAP-JGOFS library will return data
that seem to have come from a JGOFS dataset, and so on.
</p><p>OPeNDAP does not pretend to remove all the overhead of data
searches. A user will still have to keep track of the URLs of
interesting data in the same way a user must now keep track of the
names of files.  (You may run across datasets where the data consists
of OPeNDAP URLs.  These are the OPeNDAP file servers, and have been
developed by OPeNDAP users to organize datasets consisting of large
numbers of individual files.)  But it does make the access to that
data simpler and quicker.
</p><p>The OPeNDAP group provides a whole array of client software to
implement this communication standard.  These range from standalone
clients to libraries to link with existing software.  There is
more about these in <a href="../index.php?title=UserGuideOPeNDAPClient&amp;action=edit&amp;redlink=1" class="new" title="UserGuideOPeNDAPClient (page does not exist)"> OPeNDAP Client</a>.
</p>
<h1><span class="mw-headline" id="The_OPeNDAP_Services"><span class="mw-headline-number">3</span> The OPeNDAP Services</span></h1>
<p>The communication between an OPeNDAP client and server is specified by
the Data Access Protocol (DAP).  This defines the range of messages a
server must understand and the kinds of replies it makes.
</p><p>There are two categories of messages an OPeNDAP server can
understand.  Some are required by the DAP, and others are merely
suggested.  A server is considered to be DAP-compliant if it can
respond intelligibly to the required messages.
</p><p>The requests messages a server is required to understand are these:
</p>
<dl>
<dt>Data Description
</dt>
<dd>Data values come in types and sizes.  An array, for example, might consist of 10 integers.  The value "ten" and the type "integer" describe the array.  This request returns information about data types, so that a receiving program can allocate space appropriately.  See <a href="../index.php/UserGuideDataModel#DDS" title="UserGuideDataModel"> Data Description Structure (DDS)</a>.
</dd>
</dl>
<dl>
<dt>Data Attribute
</dt>
<dd>This is a request to provide information <i>about</i> data, and typically includes information like units, names of data types, reference information and so on.  See <a href="../index.php/UserGuideDataModel#DAS" title="UserGuideDataModel"> Data Attribute Structure (DAS)</a>.
</dd>
</dl>
<dl>
<dt>Data
</dt>
<dd>The server also must be able to respond to a request for the data itself.  See <a href="../index.php/UserGuideDataModel#DataDDS" title="UserGuideDataModel"> data response</a>.
</dd>
</dl>
<p>A server may respond to requests like these, too:
</p>
<dl>
<dt>ASCII
</dt>
<dd>Some servers can convert data to ASCII values on the fly.  This allows users to view data using a standard web browser, assuming the data are not too large.  See <a href="../index.php/UserGuideServer#ASCII" title="UserGuideServer"> ASCII return</a>.
</dd>
</dl>
<dl>
<dt>Info
</dt>
<dd>The info response is a formatted page containing information from the Data Attributes and Data Description responses.  It's meant to be a human-readable way to show what's available in a dataset via a standard web browser.  See <a href="../index.php/UserGuideServer#Info" title="UserGuideServer"> Info response</a>.
</dd>
</dl>
<dl>
<dt>HTML
</dt>
<dd>Very similar to the info response is the HTML response.  This provides not only the information from the info response, but also includes a Javascript form to help you build a request for data from the same data file.  The best description of the HTML form is in the <a href="../index.php/QuickStart" title="QuickStart"> Quick Start Guide</a>.
</dd>
</dl>
<dl>
<dt>SOAP
</dt>
<dd>OPeNDAP servers can provide their data in terms of a SOAP request and response.  For more information see <a href="../index.php/UserGuideDataModel#SOAP" title="UserGuideDataModel"> SOAP Request</a>.
</dd>
</dl>
<dl>
<dt>DDX
</dt>
<dd>The DDX is an XML version of the Data Attribute and Data Description replies.  See <a href="../index.php/UserGuideServer#DDX" title="UserGuideServer"> DDX Request</a>.
</dd>
</dl>
<h1><span class="mw-headline" id="The_OPeNDAP_Server"><span class="mw-headline-number">4</span> The OPeNDAP Server</span></h1>
<p>OPeNDAP provides a definition of the communication between client and
server.  Servers and clients who conform to that standard can
communicate with each other.  In addition to the OPeNDAP communication
standard itself, the OPeNDAP group also provides an implementation of
that standard server protocol, called <i>Hyrax.</i>
</p><p>The OPeNDAP data server is made up of two pieces.  You can think of
them as a front-end and a back-end, though a client will not be aware
of the separation.  They will often be run on the same machine, and
even when they are not, a client will see only the front end.
</p><p>The front-end server is a Tomcat servlet, and is also called the
<b>OPeNDAP Lightweight Front-End Servlet</b> (OLFS).  Its job is to
receive your request for data and manage all the different forms such
a request might take.  For example, you might be asking for the data,
an ASCII version of the data, or a reply to a SOAP message looking for
data.  The front-end server can also reply to THREDDS catalog
requests, for information about the data, and can directly provide
some information about the data, too.
</p><p>The <b>Back-End Server</b> (BES) is more strictly about performance,
and is designed to respond quickly and efficiently to requests from
the OLFS.  It is a pure data server, and has only one format of
request and response, relying on the OLFS to convert messages to
whatever format will accommodate the user.  Most users won't make
requests directly to the BES.
</p><p><br />
</p>
<div class="center"><div class="floatnone"><a href="../index.php/File:HyraxArchitecture.jpg" class="image"><img alt="HyraxArchitecture.jpg" src="../images/thumb/c/c5/HyraxArchitecture.jpg/600px-HyraxArchitecture.jpg" width="600" height="450" srcset="/images/c/c5/HyraxArchitecture.jpg 1.5x, /images/c/c5/HyraxArchitecture.jpg 2x" /></a></div></div>
<p><i>Hyrax</i> is an alternative name for the OPeNDAP 4 Data Server.
</p><p>See
<a href="../index.php/UserGuideDataModel" title="UserGuideDataModel">Data Model</a> for a description of the data returned by these
requests and see <a href="../index.php/UserGuideServer" title="UserGuideServer">OPeNDAP Server</a> for a description of the
URL syntax used to send these requests.
</p><p>See <a href="../index.php/Hyrax" title="Hyrax">the OPeNDAP 4 Data Server documentation</a> for a
description of how to install and configure an OPeNDAP data server (Hyrax).
</p>
<h1><span class="mw-headline" id="Administration_and_Centralization_of_Data"><span class="mw-headline-number">5</span> Administration and Centralization of Data</span></h1>
<p>Under OPeNDAP, there is no central archive of data.  Data under OPeNDAP
is organized in a manner similar to the World Wide Web itself.  That
is, all one need do to make one's data available is to start up a
properly configured server on an Internet node that has
access to the data to be served.  Each data provider is free to join
and to leave the system when it is convenient, just as any proprietor
of a web page is free to delete it or add to it as whimsy demands.
</p><p>Of course, as can also be seen on the World Wide Web, there are some
disadvantages to the lack of central authority.  If no one knows about
a web site, no one will visit it.  Similarly, listing a dataset in a
central data catalog, such as the Global Change Master Directory
(<a rel="nofollow" class="external text" href="http://gcmd.gsfc.nasa.gov"><cite>http://gcmd.gsfc.nasa.gov/</cite></a>),can make data available to other researchers in a way that simply
configuring an OPeNDAP server does not.  OPeNDAP provided a facility for
registering a data set with the GCMD catalog, which makes the data set
known to the OPeNDAP data location service.  The THREDDS catalog service
is another way to make information about your data widely available.
</p><p><br />
The remainder of this book will be divided into three major sections:
instructions on the building and operating of OPeNDAP clients; a tutorial
and reference on running OPeNDAP servers and making data available to OPeNDAP
clients; and technical documentation describing the implementation details
(and the motivation behind many of the design decisions) of the OPeNDAP
software.
</p>



</div>
				<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
</body></html>