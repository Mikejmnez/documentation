
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Hyrax - Running bescmdln - OPeNDAP Documentation</title>
</head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Hyrax_-_Running_bescmdln skin-monobook action-view">
<div id="globalWrapper">
<div id="column-content"><div id="content" class="mw-body-primary" role="main">
	
	
	<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Hyrax - Running bescmdln</span></h1>
	<div id="bodyContent" class="mw-body">
		<div id="siteSub">From OPeNDAP Documentation</div>
		<div id="contentSub"></div>
		

		<!-- start content -->
<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Basic_Commands"><span class="tocnumber">1</span> <span class="toctext">Basic Commands</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Commands_for_Hyrax_testing"><span class="tocnumber">2</span> <span class="toctext">Commands for Hyrax testing</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="#Poke_around_in_the_RootDirectory_to_see_what.27s_actually_visible_to_the_BES"><span class="tocnumber">2.1</span> <span class="toctext">Poke around in the RootDirectory to see what's actually visible to the BES</span></a>
<ul>
<li class="toclevel-3 tocsection-4"><a href="#show_the_root_catalog"><span class="tocnumber">2.1.1</span> <span class="toctext">show the root catalog</span></a></li>
<li class="toclevel-3 tocsection-5"><a href="#will_show_the_contents_of_.22pathname.22"><span class="tocnumber">2.1.2</span> <span class="toctext">will show the contents of "pathname"</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-6"><a href="#Get_the_BES_to_return_a_DAP_response_object"><span class="tocnumber">2.2</span> <span class="toctext">Get the BES to return a DAP response object</span></a>
<ul>
<li class="toclevel-3 tocsection-7"><a href="#bind_the_dataset_to_a_container_in_a_catalog"><span class="tocnumber">2.2.1</span> <span class="toctext">bind the dataset to a container in a catalog</span></a></li>
<li class="toclevel-3 tocsection-8"><a href="#make_a_definition_so_you_can_access_that_container"><span class="tocnumber">2.2.2</span> <span class="toctext">make a definition so you can access that container</span></a></li>
<li class="toclevel-3 tocsection-9"><a href="#request_a_particular_response"><span class="tocnumber">2.2.3</span> <span class="toctext">request a particular response</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-10"><a href="#Command_line_options"><span class="tocnumber">3</span> <span class="toctext">Command line options</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Basic_Commands"><span class="mw-headline-number">1</span> Basic Commands</span></h2>
<p>First we will issue some simple commands to make sure that the client is talking to the server. First, start the command-line client:
</p>
<pre>% bescmdln -h localhost -p 10022
</pre>
<p>The -h option specifies the machine on which the BES is running. In this case, it's your local machine. The -p option specifies the port the BES is running on. The default, set in the BES configuraiton file, is 10022. If you changed this, or if you started the server with the -p option, then you need to use that port number here.
</p><p>If you just use these options then you will start using the command line version of the client. There are other options, but we'll start here. From here you should get a prompt. Let's try a simple command (remember to terminate each command with a semicolon):
</p>
<pre>BESClient&gt; show status;
</pre>
<p>You should get a response showing the status of the server:
</p>
<pre>Listener boot time: MDT Thu Jun  9 14:12:22 2005
</pre>
<p>Try another one:
</p>
<pre>BESClient &gt; show help;
</pre>
<p>This one should show both the BES core commands, DAP commands, and your help information.
</p><p>If you have installed a data handler, let's take a look at your data. By executing this request you should see the root node of your data directory.
</p>
<pre>BESClient &gt; show catalog;
</pre>
<p>If you can't see your data, then make sure that the RootDirectory parameters in the <a href="../index.php/Hyrax_-_BES_Configuration" title="Hyrax - BES Configuration">BES Configuration file</a> are correct.
</p>
<pre>BESClient &gt; exit
</pre>
<p>This one will exit out of interactive mode.
</p>
<h2><span class="mw-headline" id="Commands_for_Hyrax_testing"><span class="mw-headline-number">2</span> Commands for Hyrax testing</span></h2>
<h3><span class="mw-headline" id="Poke_around_in_the_RootDirectory_to_see_what.27s_actually_visible_to_the_BES"><span class="mw-headline-number">2.1</span> Poke around in the RootDirectory to see what's actually visible to the BES</span></h3>
<h5><span class="mw-headline" id="show_the_root_catalog"><span class="mw-headline-number">2.1.1</span> show the root catalog</span></h5>
<pre>show catalog;
</pre>
<h5><span class="mw-headline" id="will_show_the_contents_of_.22pathname.22"><span class="mw-headline-number">2.1.2</span> will show the contents of "pathname"</span></h5>
<p>For example, show catalog for "/data/nc"; will show all the stuff in the /data/nc directory.
</p>
<pre>show catalog for "pathname";
</pre>
<h3><span class="mw-headline" id="Get_the_BES_to_return_a_DAP_response_object"><span class="mw-headline-number">2.2</span> Get the BES to return a DAP response object</span></h3>
<p>You need three commands to do this:
</p>
<h5><span class="mw-headline" id="bind_the_dataset_to_a_container_in_a_catalog"><span class="mw-headline-number">2.2.1</span> bind the dataset to a container in a catalog</span></h5>
<pre>set container in catalog values c,/data/nc/feb.nc;
</pre>
<h5><span class="mw-headline" id="make_a_definition_so_you_can_access_that_container"><span class="mw-headline-number">2.2.2</span> make a definition so you can access that container</span></h5>
<pre>define d as c;
</pre>
<h5><span class="mw-headline" id="request_a_particular_response"><span class="mw-headline-number">2.2.3</span> request a particular response</span></h5>
<pre>get ddx for d;
</pre>
<h2><span class="mw-headline" id="Command_line_options"><span class="mw-headline-number">3</span> Command line options</span></h2>
<p>Other command line options available to the bescmdln program:
</p>
<pre>-u specifies the name of a Unix socket for connecting to the server.
-h specifies the name of a host for TCP/IP connection
-p specifies the port where the server is listening for TCP/IP connection.
-x makes the client execute a command and exit. This flag requires the -f flag.
-f sets the target file name for the return stream from the server.
-i sets the target file name for a sequence of input commands.
-t sets the timeout in seconds and is optional.
-d "cerr|&lt;filename&gt;,&lt;context&gt;" sets the client session for debugging and is optional.
-v forces the client to show the version and exit
</pre>
<p>Connection Flags: -u or -p -h are required to connect to a server and specify either a Unix socket or a TCP/IP socket.
</p><p>Input/Output Flags: you can specify that the input is from the command line with the -x flag or that the input must be read from a file with the -i flag. If you specify either -x or -i you must specify the name of a file for the output stream of the server with the -f flag. If neither the -x nor the -i flags are specified then the client goes into interactive mode. To exit out of interactive mode just type 'exit' (without the quotes) at the BESClient&gt; prompt.
</p><p>For debugging information either specify cerr to have debugging information dump to standard error, or the name of a file. The context option is a comma separated list of debugging context (component debugging). Specify all to get debugging from all components.
</p>



</div>
				<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
</body></html>